version: '3.8'

# EDSC Cross-Chain Bridge - Local Development Stack
# Spins up complete bridge infrastructure with one command
# Usage: docker-compose -f docker-compose.bridge.yml up

services:
  # Hardhat local Ethereum network
  hardhat:
    image: node:18-alpine
    container_name: edsc-hardhat
    working_dir: /app
    volumes:
      - ./contracts/ethereum:/app
    ports:
      - "8545:8545"
    command: >
      sh -c "npm install && npx hardhat node --hostname 0.0.0.0"
    networks:
      - edsc-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8545"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Deploy contracts to Hardhat
  hardhat-deploy:
    image: node:18-alpine
    container_name: edsc-deploy
    working_dir: /app
    volumes:
      - ./contracts/ethereum:/app
    depends_on:
      hardhat:
        condition: service_healthy
    environment:
      - HARDHAT_NETWORK=localhost
    command: >
      sh -c "
        npm install &&
        sleep 5 &&
        npx hardhat run scripts/deploy.js --network localhost &&
        npx hardhat run scripts/register-attesters.js --network localhost &&
        npx hardhat run scripts/authorize-token-messenger.js --network localhost
      "
    networks:
      - edsc-network

  # FlareChain (Substrate) node
  flarechain:
    build:
      context: .
      dockerfile: Dockerfile.flarechain
    container_name: edsc-flarechain
    ports:
      - "9944:9944"
      - "9933:9933"
      - "30333:30333"
    command: >
      ./target/release/flarechain-node
      --dev
      --tmp
      --rpc-cors all
      --rpc-methods unsafe
      --rpc-external
      --ws-external
      --rpc-port 9933
      --ws-port 9944
    networks:
      - edsc-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9933/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (for attestation service state)
  redis:
    image: redis:7-alpine
    container_name: edsc-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - edsc-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Attestation Service 1
  attestation-1:
    build:
      context: ./services/attestation-service
      dockerfile: Dockerfile
    container_name: edsc-attestation-1
    depends_on:
      hardhat-deploy:
        condition: service_completed_successfully
      flarechain:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - SUBSTRATE_WS_URL=ws://flarechain:9944
      - SUBSTRATE_CHAIN_ID=2
      - ETHEREUM_RPC_URL=http://hardhat:8545
      - ETHEREUM_CHAIN_ID=1337
      - ATTESTER_PRIVATE_KEY=0x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d
      - ATTESTER_ADDRESS=0x70997970C51812dc3A010C7d01b50e0d17dc79C8
      - ATTESTER_ID=0
      - PORT=3000
      - REDIS_URL=redis://redis:6379
      - MIN_SIGNATURES=3
      - TOTAL_ATTESTERS=5
      - CONFIRMATIONS_REQUIRED=1
      - LOG_LEVEL=info
    ports:
      - "3000:3000"
      - "9090:9090"
    networks:
      - edsc-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Attestation Service 2
  attestation-2:
    build:
      context: ./services/attestation-service
      dockerfile: Dockerfile
    container_name: edsc-attestation-2
    depends_on:
      hardhat-deploy:
        condition: service_completed_successfully
      flarechain:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - SUBSTRATE_WS_URL=ws://flarechain:9944
      - SUBSTRATE_CHAIN_ID=2
      - ETHEREUM_RPC_URL=http://hardhat:8545
      - ETHEREUM_CHAIN_ID=1337
      - ATTESTER_PRIVATE_KEY=0x5de4111afa1a4b94908f83103eb1f1706367c2e68ca870fc3fb9a804cdab365a
      - ATTESTER_ADDRESS=0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC
      - ATTESTER_ID=1
      - PORT=3000
      - REDIS_URL=redis://redis:6379
      - MIN_SIGNATURES=3
      - TOTAL_ATTESTERS=5
      - CONFIRMATIONS_REQUIRED=1
      - LOG_LEVEL=info
    ports:
      - "3001:3000"
      - "9091:9090"
    networks:
      - edsc-network

  # Attestation Service 3
  attestation-3:
    build:
      context: ./services/attestation-service
      dockerfile: Dockerfile
    container_name: edsc-attestation-3
    depends_on:
      hardhat-deploy:
        condition: service_completed_successfully
      flarechain:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - SUBSTRATE_WS_URL=ws://flarechain:9944
      - SUBSTRATE_CHAIN_ID=2
      - ETHEREUM_RPC_URL=http://hardhat:8545
      - ETHEREUM_CHAIN_ID=1337
      - ATTESTER_PRIVATE_KEY=0x7c852118294e51e653712a81e05800f419141751be58f605c371e15141b007a6
      - ATTESTER_ADDRESS=0x90F79bf6EB2c4f870365E785982E1f101E93b906
      - ATTESTER_ID=2
      - PORT=3000
      - REDIS_URL=redis://redis:6379
      - MIN_SIGNATURES=3
      - TOTAL_ATTESTERS=5
      - CONFIRMATIONS_REQUIRED=1
      - LOG_LEVEL=info
    ports:
      - "3002:3000"
      - "9092:9090"
    networks:
      - edsc-network

  # Relayer Service
  relayer:
    build:
      context: ./services/relayer-service
      dockerfile: Dockerfile
    container_name: edsc-relayer
    depends_on:
      attestation-1:
        condition: service_healthy
      attestation-2:
        condition: service_started
      attestation-3:
        condition: service_started
    environment:
      - ATTESTATION_SERVICE_URLS=http://attestation-1:3000,http://attestation-2:3000,http://attestation-3:3000
      - SUBSTRATE_WS_URL=ws://flarechain:9944
      - ETHEREUM_RPC_URL=http://hardhat:8545
      - RELAYER_PRIVATE_KEY=0x47e179ec197488593b187f80a00eb0da91f1b9d0b13f8733639f19c30a34926a
      - RELAYER_ADDRESS=0x15d34AAf54267DB7D7c367839AAf71A00a2C6A65
      - POLL_INTERVAL_MS=10000
      - MAX_RETRIES=3
      - RETRY_DELAY_MS=30000
      - GAS_LIMIT=500000
      - ENABLE_API=true
      - API_PORT=3001
      - LOG_LEVEL=info
    ports:
      - "3010:3001"
      - "9093:9091"
    networks:
      - edsc-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Prometheus monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: edsc-prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9099:9090"
    networks:
      - edsc-network
    depends_on:
      - attestation-1
      - attestation-2
      - attestation-3
      - relayer

  # Grafana dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: edsc-grafana
    volumes:
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3030:3000"
    networks:
      - edsc-network
    depends_on:
      - prometheus

networks:
  edsc-network:
    driver: bridge

volumes:
  redis-data:
  prometheus-data:
  grafana-data:
