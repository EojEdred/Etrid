version: '3.8'

# Ã‹trid Governance Forum (Discourse)
# Based on https://github.com/discourse/discourse_docker
# Usage: docker-compose -f docker-compose.governance-forum.yml up -d

services:
  postgres:
    image: postgres:14-alpine
    container_name: etrid-forum-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: discourse
      POSTGRES_USER: discourse
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change_me_in_production}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - governance-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U discourse"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: etrid-forum-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - governance-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  discourse:
    image: discourse/discourse:stable
    container_name: etrid-forum-web
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Discourse Configuration
      DISCOURSE_HOSTNAME: ${DISCOURSE_HOSTNAME:-forum.etrid.network}
      DISCOURSE_DEVELOPER_EMAILS: ${ADMIN_EMAIL:-admin@etrid.network}
      DISCOURSE_SMTP_ADDRESS: ${SMTP_ADDRESS:-smtp.sendgrid.net}
      DISCOURSE_SMTP_PORT: ${SMTP_PORT:-587}
      DISCOURSE_SMTP_USER_NAME: ${SMTP_USER:-apikey}
      DISCOURSE_SMTP_PASSWORD: ${SMTP_PASSWORD}
      DISCOURSE_SMTP_ENABLE_START_TLS: "true"
      DISCOURSE_SMTP_AUTHENTICATION: plain
      DISCOURSE_SMTP_OPENSSL_VERIFY_MODE: none

      # Database
      DISCOURSE_DB_HOST: postgres
      DISCOURSE_DB_NAME: discourse
      DISCOURSE_DB_USERNAME: discourse
      DISCOURSE_DB_PASSWORD: ${POSTGRES_PASSWORD:-change_me_in_production}

      # Redis
      DISCOURSE_REDIS_HOST: redis
      DISCOURSE_REDIS_PORT: 6379

      # CDN & Assets (Optional)
      DISCOURSE_CDN_URL: ${CDN_URL:-}
      DISCOURSE_S3_BUCKET: ${S3_BUCKET:-}
      DISCOURSE_S3_REGION: ${S3_REGION:-}
      DISCOURSE_S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY:-}
      DISCOURSE_S3_SECRET_ACCESS_KEY: ${S3_SECRET_KEY:-}

      # Security
      DISCOURSE_FORCE_HTTPS: ${FORCE_HTTPS:-false}
      DISCOURSE_USE_S3: ${USE_S3:-false}

      # Blockchain Integration
      ETRID_RPC_URL: ${ETRID_RPC_URL:-http://validator:9933}

    ports:
      - "${FORUM_PORT:-8080}:80"
    volumes:
      - discourse-data:/shared
      - discourse-logs:/var/log
      - ./config/discourse/plugins:/var/www/discourse/plugins/custom
    networks:
      - governance-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost/srv/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx reverse proxy (optional, for SSL termination)
  nginx:
    image: nginx:alpine
    container_name: etrid-forum-nginx
    restart: unless-stopped
    depends_on:
      - discourse
    ports:
      - "${HTTPS_PORT:-443}:443"
      - "${HTTP_PORT:-80}:80"
    volumes:
      - ./config/nginx/forum.conf:/etc/nginx/conf.d/default.conf:ro
      - ./config/nginx/ssl:/etc/nginx/ssl:ro
      - certbot-data:/var/www/certbot
    networks:
      - governance-network
    profiles:
      - production

  # Certbot for Let's Encrypt SSL (optional)
  certbot:
    image: certbot/certbot
    container_name: etrid-forum-certbot
    volumes:
      - ./config/nginx/ssl:/etc/letsencrypt
      - certbot-data:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    profiles:
      - production

  # Sidekiq (background jobs)
  sidekiq:
    image: discourse/discourse:stable
    container_name: etrid-forum-sidekiq
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DISCOURSE_DB_HOST: postgres
      DISCOURSE_DB_NAME: discourse
      DISCOURSE_DB_USERNAME: discourse
      DISCOURSE_DB_PASSWORD: ${POSTGRES_PASSWORD:-change_me_in_production}
      DISCOURSE_REDIS_HOST: redis
      DISCOURSE_HOSTNAME: ${DISCOURSE_HOSTNAME:-forum.etrid.network}
    command: ["/sbin/boot", "sidekiq"]
    volumes:
      - discourse-data:/shared
      - discourse-logs:/var/log
    networks:
      - governance-network

  # Mail receiver (for email-based posting)
  mail-receiver:
    image: discourse/discourse:stable
    container_name: etrid-forum-mail
    restart: unless-stopped
    depends_on:
      - discourse
    environment:
      DISCOURSE_MAIL_RECEIVER_HOST: ${MAIL_RECEIVER_HOST:-mail.etrid.network}
      DISCOURSE_MAIL_RECEIVER_PORT: ${MAIL_RECEIVER_PORT:-25}
      DISCOURSE_DB_HOST: postgres
      DISCOURSE_REDIS_HOST: redis
    command: ["/sbin/boot", "mail-receiver"]
    ports:
      - "${MAIL_PORT:-25}:25"
    volumes:
      - discourse-data:/shared
    networks:
      - governance-network
    profiles:
      - mail

networks:
  governance-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  discourse-data:
    driver: local
  discourse-logs:
    driver: local
  certbot-data:
    driver: local
