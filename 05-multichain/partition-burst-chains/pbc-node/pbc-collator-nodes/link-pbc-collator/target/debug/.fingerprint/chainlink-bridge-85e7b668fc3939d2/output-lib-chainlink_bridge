{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":812,"byte_end":825,"line_start":25,"line_end":25,"column_start":56,"column_end":69,"is_primary":true,"text":[{"text":"#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]","highlight_start":56,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":812,"byte_end":825,"line_start":25,"line_end":25,"column_start":56,"column_end":69,"is_primary":false,"text":[{"text":"#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]","highlight_start":56,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(MaxEncodedLen)]","def_site_span":{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-derive-3.7.5/src/lib.rs","byte_start":13409,"byte_end":13497,"line_start":429,"line_end":429,"column_start":1,"column_end":89,"is_primary":false,"text":[{"text":"pub fn derive_max_encoded_len(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":89}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:25:56\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `MaxEncodedLen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":827,"byte_end":833,"line_start":25,"line_end":25,"column_start":71,"column_end":77,"is_primary":true,"text":[{"text":"#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]","highlight_start":71,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":827,"byte_end":833,"line_start":25,"line_end":25,"column_start":71,"column_end":77,"is_primary":false,"text":[{"text":"#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]","highlight_start":71,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Encode)]","def_site_span":{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-derive-3.7.5/src/lib.rs","byte_start":4251,"byte_end":4330,"line_start":125,"line_end":125,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"pub fn encode_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:25:71\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `Encode` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":835,"byte_end":841,"line_start":25,"line_end":25,"column_start":79,"column_end":85,"is_primary":true,"text":[{"text":"#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]","highlight_start":79,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":835,"byte_end":841,"line_start":25,"line_end":25,"column_start":79,"column_end":85,"is_primary":false,"text":[{"text":"#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]","highlight_start":79,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Decode)]","def_site_span":{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-derive-3.7.5/src/lib.rs","byte_start":5658,"byte_end":5737,"line_start":176,"line_end":176,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"pub fn decode_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:25:79\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `Decode` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1363,"byte_end":1376,"line_start":38,"line_end":38,"column_start":56,"column_end":69,"is_primary":true,"text":[{"text":"#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]","highlight_start":56,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1363,"byte_end":1376,"line_start":38,"line_end":38,"column_start":56,"column_end":69,"is_primary":false,"text":[{"text":"#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]","highlight_start":56,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(MaxEncodedLen)]","def_site_span":{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-derive-3.7.5/src/lib.rs","byte_start":13409,"byte_end":13497,"line_start":429,"line_end":429,"column_start":1,"column_end":89,"is_primary":false,"text":[{"text":"pub fn derive_max_encoded_len(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":89}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:38:56\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `MaxEncodedLen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1378,"byte_end":1384,"line_start":38,"line_end":38,"column_start":71,"column_end":77,"is_primary":true,"text":[{"text":"#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]","highlight_start":71,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1378,"byte_end":1384,"line_start":38,"line_end":38,"column_start":71,"column_end":77,"is_primary":false,"text":[{"text":"#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]","highlight_start":71,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Encode)]","def_site_span":{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-derive-3.7.5/src/lib.rs","byte_start":4251,"byte_end":4330,"line_start":125,"line_end":125,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"pub fn encode_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:38:71\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `Encode` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1386,"byte_end":1392,"line_start":38,"line_end":38,"column_start":79,"column_end":85,"is_primary":true,"text":[{"text":"#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]","highlight_start":79,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1386,"byte_end":1392,"line_start":38,"line_end":38,"column_start":79,"column_end":85,"is_primary":false,"text":[{"text":"#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]","highlight_start":79,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Decode)]","def_site_span":{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-derive-3.7.5/src/lib.rs","byte_start":5658,"byte_end":5737,"line_start":176,"line_end":176,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"pub fn decode_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:38:79\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `Decode` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1745,"byte_end":1758,"line_start":50,"line_end":50,"column_start":56,"column_end":69,"is_primary":true,"text":[{"text":"#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]","highlight_start":56,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1745,"byte_end":1758,"line_start":50,"line_end":50,"column_start":56,"column_end":69,"is_primary":false,"text":[{"text":"#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]","highlight_start":56,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(MaxEncodedLen)]","def_site_span":{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-derive-3.7.5/src/lib.rs","byte_start":13409,"byte_end":13497,"line_start":429,"line_end":429,"column_start":1,"column_end":89,"is_primary":false,"text":[{"text":"pub fn derive_max_encoded_len(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":89}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:50:56\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `MaxEncodedLen` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1760,"byte_end":1766,"line_start":50,"line_end":50,"column_start":71,"column_end":77,"is_primary":true,"text":[{"text":"#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]","highlight_start":71,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1760,"byte_end":1766,"line_start":50,"line_end":50,"column_start":71,"column_end":77,"is_primary":false,"text":[{"text":"#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]","highlight_start":71,"highlight_end":77}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Encode)]","def_site_span":{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-derive-3.7.5/src/lib.rs","byte_start":4251,"byte_end":4330,"line_start":125,"line_end":125,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"pub fn encode_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:50:71\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `Encode` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1768,"byte_end":1774,"line_start":50,"line_end":50,"column_start":79,"column_end":85,"is_primary":true,"text":[{"text":"#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]","highlight_start":79,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1768,"byte_end":1774,"line_start":50,"line_end":50,"column_start":79,"column_end":85,"is_primary":false,"text":[{"text":"#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]","highlight_start":79,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Decode)]","def_site_span":{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-derive-3.7.5/src/lib.rs","byte_start":5658,"byte_end":5737,"line_start":176,"line_end":176,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"pub fn decode_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:50:79\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Clone, PartialEq, Eq, RuntimeDebug, TypeInfo, MaxEncodedLen, Encode, Decode)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `Decode` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1977,"byte_end":2001,"line_start":58,"line_end":58,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"#[frame_support::pallet]","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1977,"byte_end":2001,"line_start":58,"line_end":58,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"#[frame_support::pallet]","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(frame_support::__private::codec::Encode)]","def_site_span":{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-derive-3.7.5/src/lib.rs","byte_start":4251,"byte_end":4330,"line_start":125,"line_end":125,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"pub fn encode_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:58:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[frame_support::pallet]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `frame_support::__private::codec::Encode` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1977,"byte_end":2001,"line_start":58,"line_end":58,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"#[frame_support::pallet]","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1977,"byte_end":2001,"line_start":58,"line_end":58,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"#[frame_support::pallet]","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(frame_support::__private::codec::Decode)]","def_site_span":{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-derive-3.7.5/src/lib.rs","byte_start":5658,"byte_end":5737,"line_start":176,"line_end":176,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"pub fn decode_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:58:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[frame_support::pallet]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `frame_support::__private::codec::Decode` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1977,"byte_end":2001,"line_start":58,"line_end":58,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"#[frame_support::pallet]","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1977,"byte_end":2001,"line_start":58,"line_end":58,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"#[frame_support::pallet]","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(frame_support::__private::codec::DecodeWithMemTracking)]","def_site_span":{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-derive-3.7.5/src/lib.rs","byte_start":7707,"byte_end":7804,"line_start":247,"line_end":247,"column_start":1,"column_end":98,"is_primary":false,"text":[{"text":"pub fn decode_with_mem_tracking_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":98}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:58:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[frame_support::pallet]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `frame_support::__private::codec::DecodeWithMemTracking` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1977,"byte_end":2001,"line_start":58,"line_end":58,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"#[frame_support::pallet]","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1977,"byte_end":2001,"line_start":58,"line_end":58,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"#[frame_support::pallet]","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(frame_support::__private::codec::Encode)]","def_site_span":{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-derive-3.7.5/src/lib.rs","byte_start":4251,"byte_end":4330,"line_start":125,"line_end":125,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"pub fn encode_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:58:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[frame_support::pallet]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `frame_support::__private::codec::Encode` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1977,"byte_end":2001,"line_start":58,"line_end":58,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"#[frame_support::pallet]","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1977,"byte_end":2001,"line_start":58,"line_end":58,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"#[frame_support::pallet]","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(frame_support::__private::codec::Decode)]","def_site_span":{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-derive-3.7.5/src/lib.rs","byte_start":5658,"byte_end":5737,"line_start":176,"line_end":176,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"pub fn decode_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:58:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[frame_support::pallet]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `frame_support::__private::codec::Decode` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1977,"byte_end":2001,"line_start":58,"line_end":58,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"#[frame_support::pallet]","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1977,"byte_end":2001,"line_start":58,"line_end":58,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"#[frame_support::pallet]","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(frame_support::__private::codec::DecodeWithMemTracking)]","def_site_span":{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-derive-3.7.5/src/lib.rs","byte_start":7707,"byte_end":7804,"line_start":247,"line_end":247,"column_start":1,"column_end":98,"is_primary":false,"text":[{"text":"pub fn decode_with_mem_tracking_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":98}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:58:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[frame_support::pallet]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `frame_support::__private::codec::DecodeWithMemTracking` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1977,"byte_end":2001,"line_start":58,"line_end":58,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"#[frame_support::pallet]","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1977,"byte_end":2001,"line_start":58,"line_end":58,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"#[frame_support::pallet]","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(frame_support::__private::codec::Encode)]","def_site_span":{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-derive-3.7.5/src/lib.rs","byte_start":4251,"byte_end":4330,"line_start":125,"line_end":125,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"pub fn encode_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:58:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[frame_support::pallet]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `frame_support::__private::codec::Encode` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1977,"byte_end":2001,"line_start":58,"line_end":58,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"#[frame_support::pallet]","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1977,"byte_end":2001,"line_start":58,"line_end":58,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"#[frame_support::pallet]","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(frame_support::__private::codec::Decode)]","def_site_span":{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-derive-3.7.5/src/lib.rs","byte_start":5658,"byte_end":5737,"line_start":176,"line_end":176,"column_start":1,"column_end":80,"is_primary":false,"text":[{"text":"pub fn decode_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:58:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[frame_support::pallet]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `frame_support::__private::codec::Decode` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!","code":null,"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1977,"byte_end":2001,"line_start":58,"line_end":58,"column_start":1,"column_end":25,"is_primary":true,"text":[{"text":"#[frame_support::pallet]","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1977,"byte_end":2001,"line_start":58,"line_end":58,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"#[frame_support::pallet]","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(frame_support::__private::codec::DecodeWithMemTracking)]","def_site_span":{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-derive-3.7.5/src/lib.rs","byte_start":7707,"byte_end":7804,"line_start":247,"line_end":247,"column_start":1,"column_end":98,"is_primary":false,"text":[{"text":"pub fn decode_with_mem_tracking_derive(input: proc_macro::TokenStream) -> proc_macro::TokenStream {","highlight_start":1,"highlight_end":98}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: Could not find `parity-scale-codec` in `dependencies` or `dev-dependencies` in `/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/Cargo.toml`!\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:58:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[frame_support::pallet]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `frame_support::__private::codec::DecodeWithMemTracking` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated constant `pallet::RuntimeEvent::_w`: \n\t\tIt is deprecated to have `RuntimeEvent` associated type in the pallet config.\n\t\tPlease instead remove it as it is redundant since associated bound gets appended automatically: \n\t\t\n\t\tpub trait Config: frame_system::Config<RuntimeEvent: From<Event<Self>>> { }.\n\n\t\tFor more info see:\n\t\t\t<https://github.com/paritytech/polkadot-sdk/pull/7229>","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":2441,"byte_end":2453,"line_start":73,"line_end":73,"column_start":14,"column_end":26,"is_primary":true,"text":[{"text":"        type RuntimeEvent: From<Event<Self>> + IsType<<Self as frame_system::Config>::RuntimeEvent>;","highlight_start":14,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(deprecated)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated constant `pallet::RuntimeEvent::_w`: \u001b[0m\n\u001b[0m\u001b[1m                 It is deprecated to have `RuntimeEvent` associated type in the pallet config.\u001b[0m\n\u001b[0m\u001b[1m                 Please instead remove it as it is redundant since associated bound gets appended automatically: \u001b[0m\n\u001b[0m\u001b[1m                 \u001b[0m\n\u001b[0m\u001b[1m                 pub trait Config: frame_system::Config<RuntimeEvent: From<Event<Self>>> { }.\u001b[0m\n\u001b[0m\u001b[1m         \u001b[0m\n\u001b[0m\u001b[1m                 For more info see:\u001b[0m\n\u001b[0m\u001b[1m                     <https://github.com/paritytech/polkadot-sdk/pull/7229>\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:73:14\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        type RuntimeEvent: From<Event<Self>> + IsType<<Self as frame_system::Config>::RuntimeEvent>;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(deprecated)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated constant `pallet::warnings::ConstantWeight_0::_w`: \n\t\tIt is deprecated to use hard-coded constant as call weight.\n\t\tPlease instead benchmark all calls or put the pallet into `dev` mode.\n\n\t\tFor more info see:\n\t\t\t<https://github.com/paritytech/substrate/pull/13798>","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":9774,"byte_end":9780,"line_start":307,"line_end":307,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"        #[pallet::weight(10_000)]","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated constant `pallet::warnings::ConstantWeight_0::_w`: \u001b[0m\n\u001b[0m\u001b[1m                 It is deprecated to use hard-coded constant as call weight.\u001b[0m\n\u001b[0m\u001b[1m                 Please instead benchmark all calls or put the pallet into `dev` mode.\u001b[0m\n\u001b[0m\u001b[1m         \u001b[0m\n\u001b[0m\u001b[1m                 For more info see:\u001b[0m\n\u001b[0m\u001b[1m                     <https://github.com/paritytech/substrate/pull/13798>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:307:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m307\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[pallet::weight(10_000)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated constant `pallet::warnings::ConstantWeight_1::_w`: \n\t\tIt is deprecated to use hard-coded constant as call weight.\n\t\tPlease instead benchmark all calls or put the pallet into `dev` mode.\n\n\t\tFor more info see:\n\t\t\t<https://github.com/paritytech/substrate/pull/13798>","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":11685,"byte_end":11691,"line_start":365,"line_end":365,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"        #[pallet::weight(10_000)]","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated constant `pallet::warnings::ConstantWeight_1::_w`: \u001b[0m\n\u001b[0m\u001b[1m                 It is deprecated to use hard-coded constant as call weight.\u001b[0m\n\u001b[0m\u001b[1m                 Please instead benchmark all calls or put the pallet into `dev` mode.\u001b[0m\n\u001b[0m\u001b[1m         \u001b[0m\n\u001b[0m\u001b[1m                 For more info see:\u001b[0m\n\u001b[0m\u001b[1m                     <https://github.com/paritytech/substrate/pull/13798>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:365:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m365\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[pallet::weight(10_000)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated constant `pallet::warnings::ConstantWeight_2::_w`: \n\t\tIt is deprecated to use hard-coded constant as call weight.\n\t\tPlease instead benchmark all calls or put the pallet into `dev` mode.\n\n\t\tFor more info see:\n\t\t\t<https://github.com/paritytech/substrate/pull/13798>","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":13786,"byte_end":13792,"line_start":425,"line_end":425,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"        #[pallet::weight(10_000)]","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated constant `pallet::warnings::ConstantWeight_2::_w`: \u001b[0m\n\u001b[0m\u001b[1m                 It is deprecated to use hard-coded constant as call weight.\u001b[0m\n\u001b[0m\u001b[1m                 Please instead benchmark all calls or put the pallet into `dev` mode.\u001b[0m\n\u001b[0m\u001b[1m         \u001b[0m\n\u001b[0m\u001b[1m                 For more info see:\u001b[0m\n\u001b[0m\u001b[1m                     <https://github.com/paritytech/substrate/pull/13798>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:425:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m425\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[pallet::weight(10_000)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated constant `pallet::warnings::ConstantWeight_3::_w`: \n\t\tIt is deprecated to use hard-coded constant as call weight.\n\t\tPlease instead benchmark all calls or put the pallet into `dev` mode.\n\n\t\tFor more info see:\n\t\t\t<https://github.com/paritytech/substrate/pull/13798>","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":14996,"byte_end":15002,"line_start":468,"line_end":468,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"        #[pallet::weight(10_000)]","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated constant `pallet::warnings::ConstantWeight_3::_w`: \u001b[0m\n\u001b[0m\u001b[1m                 It is deprecated to use hard-coded constant as call weight.\u001b[0m\n\u001b[0m\u001b[1m                 Please instead benchmark all calls or put the pallet into `dev` mode.\u001b[0m\n\u001b[0m\u001b[1m         \u001b[0m\n\u001b[0m\u001b[1m                 For more info see:\u001b[0m\n\u001b[0m\u001b[1m                     <https://github.com/paritytech/substrate/pull/13798>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:468:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m468\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[pallet::weight(10_000)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated constant `pallet::warnings::ConstantWeight_4::_w`: \n\t\tIt is deprecated to use hard-coded constant as call weight.\n\t\tPlease instead benchmark all calls or put the pallet into `dev` mode.\n\n\t\tFor more info see:\n\t\t\t<https://github.com/paritytech/substrate/pull/13798>","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":15531,"byte_end":15537,"line_start":487,"line_end":487,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"        #[pallet::weight(10_000)]","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated constant `pallet::warnings::ConstantWeight_4::_w`: \u001b[0m\n\u001b[0m\u001b[1m                 It is deprecated to use hard-coded constant as call weight.\u001b[0m\n\u001b[0m\u001b[1m                 Please instead benchmark all calls or put the pallet into `dev` mode.\u001b[0m\n\u001b[0m\u001b[1m         \u001b[0m\n\u001b[0m\u001b[1m                 For more info see:\u001b[0m\n\u001b[0m\u001b[1m                     <https://github.com/paritytech/substrate/pull/13798>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:487:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m487\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[pallet::weight(10_000)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated constant `pallet::warnings::ConstantWeight_5::_w`: \n\t\tIt is deprecated to use hard-coded constant as call weight.\n\t\tPlease instead benchmark all calls or put the pallet into `dev` mode.\n\n\t\tFor more info see:\n\t\t\t<https://github.com/paritytech/substrate/pull/13798>","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":15972,"byte_end":15978,"line_start":500,"line_end":500,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"        #[pallet::weight(10_000)]","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated constant `pallet::warnings::ConstantWeight_5::_w`: \u001b[0m\n\u001b[0m\u001b[1m                 It is deprecated to use hard-coded constant as call weight.\u001b[0m\n\u001b[0m\u001b[1m                 Please instead benchmark all calls or put the pallet into `dev` mode.\u001b[0m\n\u001b[0m\u001b[1m         \u001b[0m\n\u001b[0m\u001b[1m                 For more info see:\u001b[0m\n\u001b[0m\u001b[1m                     <https://github.com/paritytech/substrate/pull/13798>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:500:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m500\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[pallet::weight(10_000)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated constant `pallet::warnings::ConstantWeight_6::_w`: \n\t\tIt is deprecated to use hard-coded constant as call weight.\n\t\tPlease instead benchmark all calls or put the pallet into `dev` mode.\n\n\t\tFor more info see:\n\t\t\t<https://github.com/paritytech/substrate/pull/13798>","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":16428,"byte_end":16434,"line_start":516,"line_end":516,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"        #[pallet::weight(10_000)]","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated constant `pallet::warnings::ConstantWeight_6::_w`: \u001b[0m\n\u001b[0m\u001b[1m                 It is deprecated to use hard-coded constant as call weight.\u001b[0m\n\u001b[0m\u001b[1m                 Please instead benchmark all calls or put the pallet into `dev` mode.\u001b[0m\n\u001b[0m\u001b[1m         \u001b[0m\n\u001b[0m\u001b[1m                 For more info see:\u001b[0m\n\u001b[0m\u001b[1m                     <https://github.com/paritytech/substrate/pull/13798>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:516:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m516\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[pallet::weight(10_000)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated constant `pallet::warnings::ConstantWeight_7::_w`: \n\t\tIt is deprecated to use hard-coded constant as call weight.\n\t\tPlease instead benchmark all calls or put the pallet into `dev` mode.\n\n\t\tFor more info see:\n\t\t\t<https://github.com/paritytech/substrate/pull/13798>","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":16816,"byte_end":16822,"line_start":530,"line_end":530,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"        #[pallet::weight(10_000)]","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated constant `pallet::warnings::ConstantWeight_7::_w`: \u001b[0m\n\u001b[0m\u001b[1m                 It is deprecated to use hard-coded constant as call weight.\u001b[0m\n\u001b[0m\u001b[1m                 Please instead benchmark all calls or put the pallet into `dev` mode.\u001b[0m\n\u001b[0m\u001b[1m         \u001b[0m\n\u001b[0m\u001b[1m                 For more info see:\u001b[0m\n\u001b[0m\u001b[1m                     <https://github.com/paritytech/substrate/pull/13798>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:530:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m530\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[pallet::weight(10_000)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated constant `pallet::warnings::ConstantWeight_8::_w`: \n\t\tIt is deprecated to use hard-coded constant as call weight.\n\t\tPlease instead benchmark all calls or put the pallet into `dev` mode.\n\n\t\tFor more info see:\n\t\t\t<https://github.com/paritytech/substrate/pull/13798>","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":17267,"byte_end":17273,"line_start":543,"line_end":543,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"        #[pallet::weight(10_000)]","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated constant `pallet::warnings::ConstantWeight_8::_w`: \u001b[0m\n\u001b[0m\u001b[1m                 It is deprecated to use hard-coded constant as call weight.\u001b[0m\n\u001b[0m\u001b[1m                 Please instead benchmark all calls or put the pallet into `dev` mode.\u001b[0m\n\u001b[0m\u001b[1m         \u001b[0m\n\u001b[0m\u001b[1m                 For more info see:\u001b[0m\n\u001b[0m\u001b[1m                     <https://github.com/paritytech/substrate/pull/13798>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:543:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m543\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[pallet::weight(10_000)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated constant `pallet::warnings::ConstantWeight_9::_w`: \n\t\tIt is deprecated to use hard-coded constant as call weight.\n\t\tPlease instead benchmark all calls or put the pallet into `dev` mode.\n\n\t\tFor more info see:\n\t\t\t<https://github.com/paritytech/substrate/pull/13798>","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":17690,"byte_end":17696,"line_start":556,"line_end":556,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"        #[pallet::weight(15_000)]","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated constant `pallet::warnings::ConstantWeight_9::_w`: \u001b[0m\n\u001b[0m\u001b[1m                 It is deprecated to use hard-coded constant as call weight.\u001b[0m\n\u001b[0m\u001b[1m                 Please instead benchmark all calls or put the pallet into `dev` mode.\u001b[0m\n\u001b[0m\u001b[1m         \u001b[0m\n\u001b[0m\u001b[1m                 For more info see:\u001b[0m\n\u001b[0m\u001b[1m                     <https://github.com/paritytech/substrate/pull/13798>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:556:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m556\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[pallet::weight(15_000)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated constant `pallet::warnings::ConstantWeight_10::_w`: \n\t\tIt is deprecated to use hard-coded constant as call weight.\n\t\tPlease instead benchmark all calls or put the pallet into `dev` mode.\n\n\t\tFor more info see:\n\t\t\t<https://github.com/paritytech/substrate/pull/13798>","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":18776,"byte_end":18782,"line_start":592,"line_end":592,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"        #[pallet::weight(15_000)]","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated constant `pallet::warnings::ConstantWeight_10::_w`: \u001b[0m\n\u001b[0m\u001b[1m                 It is deprecated to use hard-coded constant as call weight.\u001b[0m\n\u001b[0m\u001b[1m                 Please instead benchmark all calls or put the pallet into `dev` mode.\u001b[0m\n\u001b[0m\u001b[1m         \u001b[0m\n\u001b[0m\u001b[1m                 For more info see:\u001b[0m\n\u001b[0m\u001b[1m                     <https://github.com/paritytech/substrate/pull/13798>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:592:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m592\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[pallet::weight(15_000)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"use of deprecated constant `pallet::warnings::ConstantWeight_11::_w`: \n\t\tIt is deprecated to use hard-coded constant as call weight.\n\t\tPlease instead benchmark all calls or put the pallet into `dev` mode.\n\n\t\tFor more info see:\n\t\t\t<https://github.com/paritytech/substrate/pull/13798>","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":19723,"byte_end":19729,"line_start":624,"line_end":624,"column_start":26,"column_end":32,"is_primary":true,"text":[{"text":"        #[pallet::weight(10_000)]","highlight_start":26,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated constant `pallet::warnings::ConstantWeight_11::_w`: \u001b[0m\n\u001b[0m\u001b[1m                 It is deprecated to use hard-coded constant as call weight.\u001b[0m\n\u001b[0m\u001b[1m                 Please instead benchmark all calls or put the pallet into `dev` mode.\u001b[0m\n\u001b[0m\u001b[1m         \u001b[0m\n\u001b[0m\u001b[1m                 For more info see:\u001b[0m\n\u001b[0m\u001b[1m                     <https://github.com/paritytech/substrate/pull/13798>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:624:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m624\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        #[pallet::weight(10_000)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `pallet::Error<T>: Decode` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":8111,"byte_end":8119,"line_start":256,"line_end":256,"column_start":14,"column_end":22,"is_primary":true,"text":[{"text":"    pub enum Error<T> {","highlight_start":14,"highlight_end":22}],"label":"the trait `WrapperTypeDecode` is not implemented for `pallet::Error<T>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `WrapperTypeDecode`:\n  Arc<T>\n  Box<T>\n  Rc<T>\n  sp_core::Bytes","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `pallet::Error<T>` to implement `Decode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `PalletError`","code":null,"level":"note","spans":[{"file_name":"/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/traits/error.rs","byte_start":1368,"byte_end":1374,"line_start":32,"line_end":32,"column_start":33,"column_end":39,"is_primary":true,"text":[{"text":"pub trait PalletError: Encode + Decode {","highlight_start":33,"highlight_end":39}],"label":"required by this bound in `PalletError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `pallet::Error<T>: Decode` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:256:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m256\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum Error<T> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeDecode` is not implemented for `pallet::Error<T>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapperTypeDecode`:\u001b[0m\n\u001b[0m              Arc<T>\u001b[0m\n\u001b[0m              Box<T>\u001b[0m\n\u001b[0m              Rc<T>\u001b[0m\n\u001b[0m              sp_core::Bytes\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `pallet::Error<T>` to implement `Decode`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `PalletError`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/traits/error.rs:32:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait PalletError: Encode + Decode {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `PalletError`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `pallet::Error<T>: parity_scale_codec::Encode` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":8111,"byte_end":8119,"line_start":256,"line_end":256,"column_start":14,"column_end":22,"is_primary":true,"text":[{"text":"    pub enum Error<T> {","highlight_start":14,"highlight_end":22}],"label":"the trait `WrapperTypeEncode` is not implemented for `pallet::Error<T>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `WrapperTypeEncode`:\n  &T\n  &mut T\n  Arc<T>\n  Box<T>\n  Cow<'_, T>\n  Rc<T>\n  Vec<T>\n  bytes::bytes::Bytes\nand 3 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `pallet::Error<T>` to implement `parity_scale_codec::Encode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `PalletError`","code":null,"level":"note","spans":[{"file_name":"/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/traits/error.rs","byte_start":1359,"byte_end":1365,"line_start":32,"line_end":32,"column_start":24,"column_end":30,"is_primary":true,"text":[{"text":"pub trait PalletError: Encode + Decode {","highlight_start":24,"highlight_end":30}],"label":"required by this bound in `PalletError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `pallet::Error<T>: parity_scale_codec::Encode` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:256:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m256\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum Error<T> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeEncode` is not implemented for `pallet::Error<T>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapperTypeEncode`:\u001b[0m\n\u001b[0m              &T\u001b[0m\n\u001b[0m              &mut T\u001b[0m\n\u001b[0m              Arc<T>\u001b[0m\n\u001b[0m              Box<T>\u001b[0m\n\u001b[0m              Cow<'_, T>\u001b[0m\n\u001b[0m              Rc<T>\u001b[0m\n\u001b[0m              Vec<T>\u001b[0m\n\u001b[0m              bytes::bytes::Bytes\u001b[0m\n\u001b[0m            and 3 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `pallet::Error<T>` to implement `parity_scale_codec::Encode`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `PalletError`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/traits/error.rs:32:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m32\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait PalletError: Encode + Decode {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `PalletError`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `pallet::Call<T>: parity_scale_codec::Encode` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":9498,"byte_end":9502,"line_start":301,"line_end":301,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"    #[pallet::call]","highlight_start":15,"highlight_end":19}],"label":"the trait `WrapperTypeEncode` is not implemented for `pallet::Call<T>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `WrapperTypeEncode`:\n  &T\n  &mut T\n  Arc<T>\n  Box<T>\n  Cow<'_, T>\n  Rc<T>\n  Vec<T>\n  bytes::bytes::Bytes\nand 3 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `pallet::Call<T>` to implement `parity_scale_codec::Encode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `<pallet::Pallet<T> as Callable<T>>::RuntimeCall` to implement `parity_scale_codec::Codec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `frame_support::Callable::RuntimeCall`","code":null,"level":"note","spans":[{"file_name":"/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/dispatch.rs","byte_start":2241,"byte_end":2246,"line_start":53,"line_end":53,"column_start":45,"column_end":50,"is_primary":true,"text":[{"text":"\ttype RuntimeCall: UnfilteredDispatchable + Codec + Clone + PartialEq + Eq;","highlight_start":45,"highlight_end":50}],"label":"required by this bound in `Callable::RuntimeCall`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `pallet::Call<T>: parity_scale_codec::Encode` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:301:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m301\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::call]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeEncode` is not implemented for `pallet::Call<T>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapperTypeEncode`:\u001b[0m\n\u001b[0m              &T\u001b[0m\n\u001b[0m              &mut T\u001b[0m\n\u001b[0m              Arc<T>\u001b[0m\n\u001b[0m              Box<T>\u001b[0m\n\u001b[0m              Cow<'_, T>\u001b[0m\n\u001b[0m              Rc<T>\u001b[0m\n\u001b[0m              Vec<T>\u001b[0m\n\u001b[0m              bytes::bytes::Bytes\u001b[0m\n\u001b[0m            and 3 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `pallet::Call<T>` to implement `parity_scale_codec::Encode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `<pallet::Pallet<T> as Callable<T>>::RuntimeCall` to implement `parity_scale_codec::Codec`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `frame_support::Callable::RuntimeCall`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/dispatch.rs:53:45\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type RuntimeCall: UnfilteredDispatchable + Codec + Clone + PartialEq + Eq;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Callable::RuntimeCall`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `pallet::Call<T>: Decode` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":9498,"byte_end":9502,"line_start":301,"line_end":301,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"    #[pallet::call]","highlight_start":15,"highlight_end":19}],"label":"the trait `WrapperTypeDecode` is not implemented for `pallet::Call<T>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `WrapperTypeDecode`:\n  Arc<T>\n  Box<T>\n  Rc<T>\n  sp_core::Bytes","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `pallet::Call<T>` to implement `Decode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `<pallet::Pallet<T> as Callable<T>>::RuntimeCall` to implement `parity_scale_codec::Codec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `frame_support::Callable::RuntimeCall`","code":null,"level":"note","spans":[{"file_name":"/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/dispatch.rs","byte_start":2241,"byte_end":2246,"line_start":53,"line_end":53,"column_start":45,"column_end":50,"is_primary":true,"text":[{"text":"\ttype RuntimeCall: UnfilteredDispatchable + Codec + Clone + PartialEq + Eq;","highlight_start":45,"highlight_end":50}],"label":"required by this bound in `Callable::RuntimeCall`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `pallet::Call<T>: Decode` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:301:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m301\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::call]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeDecode` is not implemented for `pallet::Call<T>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapperTypeDecode`:\u001b[0m\n\u001b[0m              Arc<T>\u001b[0m\n\u001b[0m              Box<T>\u001b[0m\n\u001b[0m              Rc<T>\u001b[0m\n\u001b[0m              sp_core::Bytes\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `pallet::Call<T>` to implement `Decode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `<pallet::Pallet<T> as Callable<T>>::RuntimeCall` to implement `parity_scale_codec::Codec`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `frame_support::Callable::RuntimeCall`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/dispatch.rs:53:45\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    type RuntimeCall: UnfilteredDispatchable + Codec + Clone + PartialEq + Eq;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Callable::RuntimeCall`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the function or associated item `insert` exists for struct `StorageMap<_GeneratedPrefixForStorageDataFeeds<T>, ..., ..., ...>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":14654,"byte_end":14660,"line_start":454,"line_end":454,"column_start":29,"column_end":35,"is_primary":true,"text":[{"text":"            DataFeeds::<T>::insert(feed_id, price_data);","highlight_start":29,"highlight_end":35}],"label":"function or associated item cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":905,"byte_end":927,"line_start":27,"line_end":27,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"pub struct OraclePrice {","highlight_start":1,"highlight_end":23}],"label":"doesn't satisfy 5 bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`OraclePrice: WrapperTypeDecode`\nwhich is required by `OraclePrice: FullCodec`\n`OraclePrice: EncodeLike`\nwhich is required by `OraclePrice: FullCodec`\n`OraclePrice: WrapperTypeEncode`\nwhich is required by `OraclePrice: FullCodec`\n`OraclePrice: Deref`\nwhich is required by `OraclePrice: FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `Deref`, `EncodeLike`, `WrapperTypeDecode`,  and `WrapperTypeEncode` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/codec.rs","byte_start":11352,"byte_end":11386,"line_start":367,"line_end":367,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"pub trait WrapperTypeEncode: Deref {}","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/codec.rs","byte_start":16140,"byte_end":16174,"line_start":521,"line_end":521,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"pub trait WrapperTypeDecode: Sized {","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/encode_like.rs","byte_start":2715,"byte_end":2769,"line_start":73,"line_end":73,"column_start":1,"column_end":55,"is_primary":true,"text":[{"text":"pub trait EncodeLike<T: Encode = Self>: Sized + Encode {}","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/deref.rs","byte_start":6186,"byte_end":6215,"line_start":140,"line_end":140,"column_start":1,"column_end":30,"is_primary":true,"text":[{"text":"pub trait Deref: PointeeSized {","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the function or associated item `insert` exists for struct `StorageMap<_GeneratedPrefixForStorageDataFeeds<T>, ..., ..., ...>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:454:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct OraclePrice {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy 5 bounds\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m454\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            DataFeeds::<T>::insert(feed_id, price_data);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `OraclePrice: WrapperTypeDecode`\u001b[0m\n\u001b[0m            which is required by `OraclePrice: FullCodec`\u001b[0m\n\u001b[0m            `OraclePrice: EncodeLike`\u001b[0m\n\u001b[0m            which is required by `OraclePrice: FullCodec`\u001b[0m\n\u001b[0m            `OraclePrice: WrapperTypeEncode`\u001b[0m\n\u001b[0m            which is required by `OraclePrice: FullCodec`\u001b[0m\n\u001b[0m            `OraclePrice: Deref`\u001b[0m\n\u001b[0m            which is required by `OraclePrice: FullCodec`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `Deref`, `EncodeLike`, `WrapperTypeDecode`,  and `WrapperTypeEncode` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/codec.rs:367:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m367\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait WrapperTypeEncode: Deref {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m521\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait WrapperTypeDecode: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/encode_like.rs:73:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait EncodeLike<T: Encode = Self>: Sized + Encode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/macbook/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/deref.rs:140:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deref: PointeeSized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the function or associated item `contains_key` exists for struct `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":18155,"byte_end":18167,"line_start":569,"line_end":569,"column_start":40,"column_end":52,"is_primary":true,"text":[{"text":"            ensure!(!VRFRequests::<T>::contains_key(&request_id), Error::<T>::VRFRequestExists);","highlight_start":40,"highlight_end":52}],"label":"function or associated item cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1499,"byte_end":1531,"line_start":41,"line_end":41,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"pub struct VRFRequest<AccountId> {","highlight_start":1,"highlight_end":33}],"label":"doesn't satisfy 5 bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeDecode`\nwhich is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\n`VRFRequest<<T as frame_system::Config>::AccountId>: EncodeLike`\nwhich is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\n`VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeEncode`\nwhich is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\n`VRFRequest<<T as frame_system::Config>::AccountId>: Deref`\nwhich is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `Deref`, `EncodeLike`, `WrapperTypeDecode`,  and `WrapperTypeEncode` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/codec.rs","byte_start":11352,"byte_end":11386,"line_start":367,"line_end":367,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"pub trait WrapperTypeEncode: Deref {}","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/codec.rs","byte_start":16140,"byte_end":16174,"line_start":521,"line_end":521,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"pub trait WrapperTypeDecode: Sized {","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/encode_like.rs","byte_start":2715,"byte_end":2769,"line_start":73,"line_end":73,"column_start":1,"column_end":55,"is_primary":true,"text":[{"text":"pub trait EncodeLike<T: Encode = Self>: Sized + Encode {}","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/deref.rs","byte_start":6186,"byte_end":6215,"line_start":140,"line_end":140,"column_start":1,"column_end":30,"is_primary":true,"text":[{"text":"pub trait Deref: PointeeSized {","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the function or associated item `contains_key` exists for struct `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:569:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct VRFRequest<AccountId> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy 5 bounds\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m569\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            ensure!(!VRFRequests::<T>::contains_key(&request_id), Error::<T>::VRFRequestExists);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeDecode`\u001b[0m\n\u001b[0m            which is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\u001b[0m\n\u001b[0m            `VRFRequest<<T as frame_system::Config>::AccountId>: EncodeLike`\u001b[0m\n\u001b[0m            which is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\u001b[0m\n\u001b[0m            `VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeEncode`\u001b[0m\n\u001b[0m            which is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\u001b[0m\n\u001b[0m            `VRFRequest<<T as frame_system::Config>::AccountId>: Deref`\u001b[0m\n\u001b[0m            which is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `Deref`, `EncodeLike`, `WrapperTypeDecode`,  and `WrapperTypeEncode` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/codec.rs:367:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m367\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait WrapperTypeEncode: Deref {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m521\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait WrapperTypeDecode: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/encode_like.rs:73:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait EncodeLike<T: Encode = Self>: Sized + Encode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/macbook/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/deref.rs:140:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deref: PointeeSized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the function or associated item `insert` exists for struct `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":18479,"byte_end":18485,"line_start":580,"line_end":580,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"            VRFRequests::<T>::insert(&request_id, request);","highlight_start":31,"highlight_end":37}],"label":"function or associated item cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1499,"byte_end":1531,"line_start":41,"line_end":41,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"pub struct VRFRequest<AccountId> {","highlight_start":1,"highlight_end":33}],"label":"doesn't satisfy 5 bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeDecode`\nwhich is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\n`VRFRequest<<T as frame_system::Config>::AccountId>: EncodeLike`\nwhich is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\n`VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeEncode`\nwhich is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\n`VRFRequest<<T as frame_system::Config>::AccountId>: Deref`\nwhich is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `Deref`, `EncodeLike`, `WrapperTypeDecode`,  and `WrapperTypeEncode` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/codec.rs","byte_start":11352,"byte_end":11386,"line_start":367,"line_end":367,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"pub trait WrapperTypeEncode: Deref {}","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/codec.rs","byte_start":16140,"byte_end":16174,"line_start":521,"line_end":521,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"pub trait WrapperTypeDecode: Sized {","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/encode_like.rs","byte_start":2715,"byte_end":2769,"line_start":73,"line_end":73,"column_start":1,"column_end":55,"is_primary":true,"text":[{"text":"pub trait EncodeLike<T: Encode = Self>: Sized + Encode {}","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/deref.rs","byte_start":6186,"byte_end":6215,"line_start":140,"line_end":140,"column_start":1,"column_end":30,"is_primary":true,"text":[{"text":"pub trait Deref: PointeeSized {","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the function or associated item `insert` exists for struct `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:580:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct VRFRequest<AccountId> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy 5 bounds\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m580\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            VRFRequests::<T>::insert(&request_id, request);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeDecode`\u001b[0m\n\u001b[0m            which is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\u001b[0m\n\u001b[0m            `VRFRequest<<T as frame_system::Config>::AccountId>: EncodeLike`\u001b[0m\n\u001b[0m            which is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\u001b[0m\n\u001b[0m            `VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeEncode`\u001b[0m\n\u001b[0m            which is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\u001b[0m\n\u001b[0m            `VRFRequest<<T as frame_system::Config>::AccountId>: Deref`\u001b[0m\n\u001b[0m            which is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `Deref`, `EncodeLike`, `WrapperTypeDecode`,  and `WrapperTypeEncode` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/codec.rs:367:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m367\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait WrapperTypeEncode: Deref {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m521\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait WrapperTypeDecode: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/encode_like.rs:73:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait EncodeLike<T: Encode = Self>: Sized + Encode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/macbook/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/deref.rs:140:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deref: PointeeSized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the function or associated item `get` exists for struct `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":19235,"byte_end":19238,"line_start":607,"line_end":607,"column_start":49,"column_end":52,"is_primary":true,"text":[{"text":"            let mut request = VRFRequests::<T>::get(&request_id)","highlight_start":49,"highlight_end":52}],"label":"function or associated item cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1499,"byte_end":1531,"line_start":41,"line_end":41,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"pub struct VRFRequest<AccountId> {","highlight_start":1,"highlight_end":33}],"label":"doesn't satisfy 5 bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeDecode`\nwhich is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\n`VRFRequest<<T as frame_system::Config>::AccountId>: EncodeLike`\nwhich is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\n`VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeEncode`\nwhich is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\n`VRFRequest<<T as frame_system::Config>::AccountId>: Deref`\nwhich is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `Deref`, `EncodeLike`, `WrapperTypeDecode`,  and `WrapperTypeEncode` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/codec.rs","byte_start":11352,"byte_end":11386,"line_start":367,"line_end":367,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"pub trait WrapperTypeEncode: Deref {}","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/codec.rs","byte_start":16140,"byte_end":16174,"line_start":521,"line_end":521,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"pub trait WrapperTypeDecode: Sized {","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/encode_like.rs","byte_start":2715,"byte_end":2769,"line_start":73,"line_end":73,"column_start":1,"column_end":55,"is_primary":true,"text":[{"text":"pub trait EncodeLike<T: Encode = Self>: Sized + Encode {}","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/deref.rs","byte_start":6186,"byte_end":6215,"line_start":140,"line_end":140,"column_start":1,"column_end":30,"is_primary":true,"text":[{"text":"pub trait Deref: PointeeSized {","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the function or associated item `get` exists for struct `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:607:49\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct VRFRequest<AccountId> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy 5 bounds\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m607\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut request = VRFRequests::<T>::get(&request_id)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeDecode`\u001b[0m\n\u001b[0m            which is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\u001b[0m\n\u001b[0m            `VRFRequest<<T as frame_system::Config>::AccountId>: EncodeLike`\u001b[0m\n\u001b[0m            which is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\u001b[0m\n\u001b[0m            `VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeEncode`\u001b[0m\n\u001b[0m            which is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\u001b[0m\n\u001b[0m            `VRFRequest<<T as frame_system::Config>::AccountId>: Deref`\u001b[0m\n\u001b[0m            which is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `Deref`, `EncodeLike`, `WrapperTypeDecode`,  and `WrapperTypeEncode` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/codec.rs:367:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m367\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait WrapperTypeEncode: Deref {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m521\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait WrapperTypeDecode: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/encode_like.rs:73:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait EncodeLike<T: Encode = Self>: Sized + Encode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/macbook/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/deref.rs:140:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deref: PointeeSized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the function or associated item `insert` exists for struct `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":19414,"byte_end":19420,"line_start":612,"line_end":612,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"            VRFRequests::<T>::insert(&request_id, request);","highlight_start":31,"highlight_end":37}],"label":"function or associated item cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1499,"byte_end":1531,"line_start":41,"line_end":41,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"pub struct VRFRequest<AccountId> {","highlight_start":1,"highlight_end":33}],"label":"doesn't satisfy 5 bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeDecode`\nwhich is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\n`VRFRequest<<T as frame_system::Config>::AccountId>: EncodeLike`\nwhich is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\n`VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeEncode`\nwhich is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\n`VRFRequest<<T as frame_system::Config>::AccountId>: Deref`\nwhich is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `Deref`, `EncodeLike`, `WrapperTypeDecode`,  and `WrapperTypeEncode` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/codec.rs","byte_start":11352,"byte_end":11386,"line_start":367,"line_end":367,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"pub trait WrapperTypeEncode: Deref {}","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/codec.rs","byte_start":16140,"byte_end":16174,"line_start":521,"line_end":521,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"pub trait WrapperTypeDecode: Sized {","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/encode_like.rs","byte_start":2715,"byte_end":2769,"line_start":73,"line_end":73,"column_start":1,"column_end":55,"is_primary":true,"text":[{"text":"pub trait EncodeLike<T: Encode = Self>: Sized + Encode {}","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/deref.rs","byte_start":6186,"byte_end":6215,"line_start":140,"line_end":140,"column_start":1,"column_end":30,"is_primary":true,"text":[{"text":"pub trait Deref: PointeeSized {","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the function or associated item `insert` exists for struct `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:612:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct VRFRequest<AccountId> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy 5 bounds\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m612\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            VRFRequests::<T>::insert(&request_id, request);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeDecode`\u001b[0m\n\u001b[0m            which is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\u001b[0m\n\u001b[0m            `VRFRequest<<T as frame_system::Config>::AccountId>: EncodeLike`\u001b[0m\n\u001b[0m            which is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\u001b[0m\n\u001b[0m            `VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeEncode`\u001b[0m\n\u001b[0m            which is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\u001b[0m\n\u001b[0m            `VRFRequest<<T as frame_system::Config>::AccountId>: Deref`\u001b[0m\n\u001b[0m            which is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `Deref`, `EncodeLike`, `WrapperTypeDecode`,  and `WrapperTypeEncode` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/codec.rs:367:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m367\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait WrapperTypeEncode: Deref {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m521\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait WrapperTypeDecode: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/encode_like.rs:73:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait EncodeLike<T: Encode = Self>: Sized + Encode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/macbook/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/deref.rs:140:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deref: PointeeSized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the function or associated item `get` exists for struct `StorageMap<_GeneratedPrefixForStorageDataFeeds<T>, ..., ..., ...>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":20550,"byte_end":20553,"line_start":652,"line_end":652,"column_start":29,"column_end":32,"is_primary":true,"text":[{"text":"            DataFeeds::<T>::get(feed_id)","highlight_start":29,"highlight_end":32}],"label":"function or associated item cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":905,"byte_end":927,"line_start":27,"line_end":27,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"pub struct OraclePrice {","highlight_start":1,"highlight_end":23}],"label":"doesn't satisfy 5 bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`OraclePrice: WrapperTypeDecode`\nwhich is required by `OraclePrice: FullCodec`\n`OraclePrice: EncodeLike`\nwhich is required by `OraclePrice: FullCodec`\n`OraclePrice: WrapperTypeEncode`\nwhich is required by `OraclePrice: FullCodec`\n`OraclePrice: Deref`\nwhich is required by `OraclePrice: FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `Deref`, `EncodeLike`, `WrapperTypeDecode`,  and `WrapperTypeEncode` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/codec.rs","byte_start":11352,"byte_end":11386,"line_start":367,"line_end":367,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"pub trait WrapperTypeEncode: Deref {}","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/codec.rs","byte_start":16140,"byte_end":16174,"line_start":521,"line_end":521,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"pub trait WrapperTypeDecode: Sized {","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/encode_like.rs","byte_start":2715,"byte_end":2769,"line_start":73,"line_end":73,"column_start":1,"column_end":55,"is_primary":true,"text":[{"text":"pub trait EncodeLike<T: Encode = Self>: Sized + Encode {}","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/deref.rs","byte_start":6186,"byte_end":6215,"line_start":140,"line_end":140,"column_start":1,"column_end":30,"is_primary":true,"text":[{"text":"pub trait Deref: PointeeSized {","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the function or associated item `get` exists for struct `StorageMap<_GeneratedPrefixForStorageDataFeeds<T>, ..., ..., ...>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:652:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct OraclePrice {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy 5 bounds\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m652\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            DataFeeds::<T>::get(feed_id)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `OraclePrice: WrapperTypeDecode`\u001b[0m\n\u001b[0m            which is required by `OraclePrice: FullCodec`\u001b[0m\n\u001b[0m            `OraclePrice: EncodeLike`\u001b[0m\n\u001b[0m            which is required by `OraclePrice: FullCodec`\u001b[0m\n\u001b[0m            `OraclePrice: WrapperTypeEncode`\u001b[0m\n\u001b[0m            which is required by `OraclePrice: FullCodec`\u001b[0m\n\u001b[0m            `OraclePrice: Deref`\u001b[0m\n\u001b[0m            which is required by `OraclePrice: FullCodec`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `Deref`, `EncodeLike`, `WrapperTypeDecode`,  and `WrapperTypeEncode` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/codec.rs:367:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m367\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait WrapperTypeEncode: Deref {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m521\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait WrapperTypeDecode: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/encode_like.rs:73:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait EncodeLike<T: Encode = Self>: Sized + Encode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/macbook/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/deref.rs:140:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deref: PointeeSized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the function or associated item `get` exists for struct `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":21220,"byte_end":21223,"line_start":669,"line_end":669,"column_start":31,"column_end":34,"is_primary":true,"text":[{"text":"            VRFRequests::<T>::get(request_id)","highlight_start":31,"highlight_end":34}],"label":"function or associated item cannot be called due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":1499,"byte_end":1531,"line_start":41,"line_end":41,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"pub struct VRFRequest<AccountId> {","highlight_start":1,"highlight_end":33}],"label":"doesn't satisfy 5 bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeDecode`\nwhich is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\n`VRFRequest<<T as frame_system::Config>::AccountId>: EncodeLike`\nwhich is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\n`VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeEncode`\nwhich is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\n`VRFRequest<<T as frame_system::Config>::AccountId>: Deref`\nwhich is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `Deref`, `EncodeLike`, `WrapperTypeDecode`,  and `WrapperTypeEncode` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/codec.rs","byte_start":11352,"byte_end":11386,"line_start":367,"line_end":367,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"pub trait WrapperTypeEncode: Deref {}","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/codec.rs","byte_start":16140,"byte_end":16174,"line_start":521,"line_end":521,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"pub trait WrapperTypeDecode: Sized {","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/encode_like.rs","byte_start":2715,"byte_end":2769,"line_start":73,"line_end":73,"column_start":1,"column_end":55,"is_primary":true,"text":[{"text":"pub trait EncodeLike<T: Encode = Self>: Sized + Encode {}","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/deref.rs","byte_start":6186,"byte_end":6215,"line_start":140,"line_end":140,"column_start":1,"column_end":30,"is_primary":true,"text":[{"text":"pub trait Deref: PointeeSized {","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the function or associated item `get` exists for struct `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:669:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m41\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct VRFRequest<AccountId> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy 5 bounds\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m669\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            VRFRequests::<T>::get(request_id)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item cannot be called due to unsatisfied trait bounds\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeDecode`\u001b[0m\n\u001b[0m            which is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\u001b[0m\n\u001b[0m            `VRFRequest<<T as frame_system::Config>::AccountId>: EncodeLike`\u001b[0m\n\u001b[0m            which is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\u001b[0m\n\u001b[0m            `VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeEncode`\u001b[0m\n\u001b[0m            which is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\u001b[0m\n\u001b[0m            `VRFRequest<<T as frame_system::Config>::AccountId>: Deref`\u001b[0m\n\u001b[0m            which is required by `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `Deref`, `EncodeLike`, `WrapperTypeDecode`,  and `WrapperTypeEncode` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/codec.rs:367:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m367\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait WrapperTypeEncode: Deref {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m521\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait WrapperTypeDecode: Sized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/encode_like.rs:73:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait EncodeLike<T: Encode = Self>: Sized + Encode {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/macbook/.rustup/toolchains/stable-aarch64-apple-darwin/lib/rustlib/src/rust/library/core/src/ops/deref.rs:140:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait Deref: PointeeSized {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `OraclePrice: MaxEncodedLen` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":3307,"byte_end":4356,"line_start":101,"line_end":138,"column_start":15,"column_end":23,"is_primary":true,"text":[{"text":"    #[pallet::pallet]","highlight_start":15,"highlight_end":22},{"text":"    pub struct Pallet<T>(_);","highlight_start":1,"highlight_end":29},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// LINK deposits from Ethereum to Ëtrid","highlight_start":1,"highlight_end":45},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn link_deposits)]","highlight_start":1,"highlight_end":40},{"text":"    pub type LinkDeposits<T: Config> = StorageMap<","highlight_start":1,"highlight_end":51},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        EthTxHash,","highlight_start":1,"highlight_end":19},{"text":"        (T::AccountId, BalanceOf<T>, BlockNumberFor<T>),","highlight_start":1,"highlight_end":57},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// LINK withdrawals from Ëtrid to Ethereum","highlight_start":1,"highlight_end":48},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn link_withdrawals)]","highlight_start":1,"highlight_end":43},{"text":"    pub type LinkWithdrawals<T: Config> = StorageMap<","highlight_start":1,"highlight_end":54},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        T::AccountId,","highlight_start":1,"highlight_end":22},{"text":"        BoundedVec<(EthereumAddress, BalanceOf<T>, BlockNumberFor<T>), T::MaxOracleNodes>,","highlight_start":1,"highlight_end":91},{"text":"        ValueQuery,","highlight_start":1,"highlight_end":20},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Registered Chainlink oracle nodes","highlight_start":1,"highlight_end":42},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn oracle_nodes)]","highlight_start":1,"highlight_end":39},{"text":"    pub type OracleNodes<T: Config> = StorageMap<","highlight_start":1,"highlight_end":50},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        T::AccountId,","highlight_start":1,"highlight_end":22},{"text":"        EthereumAddress,","highlight_start":1,"highlight_end":25},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Chainlink Data Feeds (e.g., LINK/USD, ETH/USD)","highlight_start":1,"highlight_end":55},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn data_feeds)]","highlight_start":1,"highlight_end":37},{"text":"    pub type DataFeeds<T: Config> = StorageMap<","highlight_start":1,"highlight_end":23}],"label":"the trait `MaxEncodedLen` is not implemented for `OraclePrice`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `MaxEncodedLen`:\n  ()\n  (TupleElement0, TupleElement1)\n  (TupleElement0, TupleElement1, TupleElement2)\n  (TupleElement0, TupleElement1, TupleElement2, TupleElement3)\n  (TupleElement0, TupleElement1, TupleElement2, TupleElement3, TupleElement4)\n  (TupleElement0, TupleElement1, TupleElement2, TupleElement3, TupleElement4, TupleElement5)\n  (TupleElement0, TupleElement1, TupleElement2, TupleElement3, TupleElement4, TupleElement5, TupleElement6)\n  (TupleElement0, TupleElement1, TupleElement2, TupleElement3, TupleElement4, TupleElement5, TupleElement6, TupleElement7)\nand 125 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `StorageMap<_GeneratedPrefixForStorageDataFeeds<T>, ..., ..., ...>` to implement `StorageInfoTrait`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-11145608883861942922.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `OraclePrice: MaxEncodedLen` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:101:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    #[pallet::pallet]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m _______________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct Pallet<T>(_);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// LINK deposits from Ethereum to Ëtrid\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::getter(fn data_feeds)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub type DataFeeds<T: Config> = StorageMap<\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|______________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `MaxEncodedLen` is not implemented for `OraclePrice`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `MaxEncodedLen`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (TupleElement0, TupleElement1)\u001b[0m\n\u001b[0m              (TupleElement0, TupleElement1, TupleElement2)\u001b[0m\n\u001b[0m              (TupleElement0, TupleElement1, TupleElement2, TupleElement3)\u001b[0m\n\u001b[0m              (TupleElement0, TupleElement1, TupleElement2, TupleElement3, TupleElement4)\u001b[0m\n\u001b[0m              (TupleElement0, TupleElement1, TupleElement2, TupleElement3, TupleElement4, TupleElement5)\u001b[0m\n\u001b[0m              (TupleElement0, TupleElement1, TupleElement2, TupleElement3, TupleElement4, TupleElement5, TupleElement6)\u001b[0m\n\u001b[0m              (TupleElement0, TupleElement1, TupleElement2, TupleElement3, TupleElement4, TupleElement5, TupleElement6, TupleElement7)\u001b[0m\n\u001b[0m            and 125 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `StorageMap<_GeneratedPrefixForStorageDataFeeds<T>, ..., ..., ...>` to implement `StorageInfoTrait`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-11145608883861942922.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `OraclePrice: WrapperTypeDecode` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":3307,"byte_end":4356,"line_start":101,"line_end":138,"column_start":15,"column_end":23,"is_primary":true,"text":[{"text":"    #[pallet::pallet]","highlight_start":15,"highlight_end":22},{"text":"    pub struct Pallet<T>(_);","highlight_start":1,"highlight_end":29},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// LINK deposits from Ethereum to Ëtrid","highlight_start":1,"highlight_end":45},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn link_deposits)]","highlight_start":1,"highlight_end":40},{"text":"    pub type LinkDeposits<T: Config> = StorageMap<","highlight_start":1,"highlight_end":51},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        EthTxHash,","highlight_start":1,"highlight_end":19},{"text":"        (T::AccountId, BalanceOf<T>, BlockNumberFor<T>),","highlight_start":1,"highlight_end":57},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// LINK withdrawals from Ëtrid to Ethereum","highlight_start":1,"highlight_end":48},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn link_withdrawals)]","highlight_start":1,"highlight_end":43},{"text":"    pub type LinkWithdrawals<T: Config> = StorageMap<","highlight_start":1,"highlight_end":54},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        T::AccountId,","highlight_start":1,"highlight_end":22},{"text":"        BoundedVec<(EthereumAddress, BalanceOf<T>, BlockNumberFor<T>), T::MaxOracleNodes>,","highlight_start":1,"highlight_end":91},{"text":"        ValueQuery,","highlight_start":1,"highlight_end":20},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Registered Chainlink oracle nodes","highlight_start":1,"highlight_end":42},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn oracle_nodes)]","highlight_start":1,"highlight_end":39},{"text":"    pub type OracleNodes<T: Config> = StorageMap<","highlight_start":1,"highlight_end":50},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        T::AccountId,","highlight_start":1,"highlight_end":22},{"text":"        EthereumAddress,","highlight_start":1,"highlight_end":25},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Chainlink Data Feeds (e.g., LINK/USD, ETH/USD)","highlight_start":1,"highlight_end":55},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn data_feeds)]","highlight_start":1,"highlight_end":37},{"text":"    pub type DataFeeds<T: Config> = StorageMap<","highlight_start":1,"highlight_end":23}],"label":"the trait `WrapperTypeDecode` is not implemented for `OraclePrice`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `WrapperTypeDecode`:\n  Arc<T>\n  Box<T>\n  Rc<T>\n  sp_core::Bytes","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `Decode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `StorageMap<_GeneratedPrefixForStorageDataFeeds<T>, ..., ..., ...>` to implement `StorageInfoTrait`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-11145608883861942922.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `OraclePrice: WrapperTypeDecode` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:101:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    #[pallet::pallet]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m _______________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct Pallet<T>(_);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// LINK deposits from Ethereum to Ëtrid\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::getter(fn data_feeds)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub type DataFeeds<T: Config> = StorageMap<\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|______________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeDecode` is not implemented for `OraclePrice`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapperTypeDecode`:\u001b[0m\n\u001b[0m              Arc<T>\u001b[0m\n\u001b[0m              Box<T>\u001b[0m\n\u001b[0m              Rc<T>\u001b[0m\n\u001b[0m              sp_core::Bytes\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `Decode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `FullCodec`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `StorageMap<_GeneratedPrefixForStorageDataFeeds<T>, ..., ..., ...>` to implement `StorageInfoTrait`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-11145608883861942922.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `OraclePrice: EncodeLike` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":3307,"byte_end":4356,"line_start":101,"line_end":138,"column_start":15,"column_end":23,"is_primary":true,"text":[{"text":"    #[pallet::pallet]","highlight_start":15,"highlight_end":22},{"text":"    pub struct Pallet<T>(_);","highlight_start":1,"highlight_end":29},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// LINK deposits from Ethereum to Ëtrid","highlight_start":1,"highlight_end":45},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn link_deposits)]","highlight_start":1,"highlight_end":40},{"text":"    pub type LinkDeposits<T: Config> = StorageMap<","highlight_start":1,"highlight_end":51},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        EthTxHash,","highlight_start":1,"highlight_end":19},{"text":"        (T::AccountId, BalanceOf<T>, BlockNumberFor<T>),","highlight_start":1,"highlight_end":57},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// LINK withdrawals from Ëtrid to Ethereum","highlight_start":1,"highlight_end":48},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn link_withdrawals)]","highlight_start":1,"highlight_end":43},{"text":"    pub type LinkWithdrawals<T: Config> = StorageMap<","highlight_start":1,"highlight_end":54},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        T::AccountId,","highlight_start":1,"highlight_end":22},{"text":"        BoundedVec<(EthereumAddress, BalanceOf<T>, BlockNumberFor<T>), T::MaxOracleNodes>,","highlight_start":1,"highlight_end":91},{"text":"        ValueQuery,","highlight_start":1,"highlight_end":20},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Registered Chainlink oracle nodes","highlight_start":1,"highlight_end":42},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn oracle_nodes)]","highlight_start":1,"highlight_end":39},{"text":"    pub type OracleNodes<T: Config> = StorageMap<","highlight_start":1,"highlight_end":50},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        T::AccountId,","highlight_start":1,"highlight_end":22},{"text":"        EthereumAddress,","highlight_start":1,"highlight_end":25},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Chainlink Data Feeds (e.g., LINK/USD, ETH/USD)","highlight_start":1,"highlight_end":55},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn data_feeds)]","highlight_start":1,"highlight_end":37},{"text":"    pub type DataFeeds<T: Config> = StorageMap<","highlight_start":1,"highlight_end":23}],"label":"the trait `EncodeLike` is not implemented for `OraclePrice`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `EncodeLike<T>`:\n  `&&T` implements `EncodeLike<T>`\n  `&T` implements `EncodeLike<T>`\n  `&T` implements `EncodeLike`\n  `&[(K, V)]` implements `EncodeLike<BTreeMap<LikeK, LikeV>>`\n  `&[(T,)]` implements `EncodeLike<BTreeSet<LikeT>>`\n  `&[(T,)]` implements `EncodeLike<BinaryHeap<LikeT>>`\n  `&[(T,)]` implements `EncodeLike<LinkedList<LikeT>>`\n  `&[T]` implements `EncodeLike<Vec<U>>`\nand 374 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `FullEncode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `StorageMap<_GeneratedPrefixForStorageDataFeeds<T>, ..., ..., ...>` to implement `StorageInfoTrait`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-11145608883861942922.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `OraclePrice: EncodeLike` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:101:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    #[pallet::pallet]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m _______________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct Pallet<T>(_);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// LINK deposits from Ethereum to Ëtrid\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::getter(fn data_feeds)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub type DataFeeds<T: Config> = StorageMap<\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|______________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `EncodeLike` is not implemented for `OraclePrice`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `EncodeLike<T>`:\u001b[0m\n\u001b[0m              `&&T` implements `EncodeLike<T>`\u001b[0m\n\u001b[0m              `&T` implements `EncodeLike<T>`\u001b[0m\n\u001b[0m              `&T` implements `EncodeLike`\u001b[0m\n\u001b[0m              `&[(K, V)]` implements `EncodeLike<BTreeMap<LikeK, LikeV>>`\u001b[0m\n\u001b[0m              `&[(T,)]` implements `EncodeLike<BTreeSet<LikeT>>`\u001b[0m\n\u001b[0m              `&[(T,)]` implements `EncodeLike<BinaryHeap<LikeT>>`\u001b[0m\n\u001b[0m              `&[(T,)]` implements `EncodeLike<LinkedList<LikeT>>`\u001b[0m\n\u001b[0m              `&[T]` implements `EncodeLike<Vec<U>>`\u001b[0m\n\u001b[0m            and 374 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `FullEncode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `FullCodec`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `StorageMap<_GeneratedPrefixForStorageDataFeeds<T>, ..., ..., ...>` to implement `StorageInfoTrait`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-11145608883861942922.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `OraclePrice: WrapperTypeEncode` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":3307,"byte_end":4356,"line_start":101,"line_end":138,"column_start":15,"column_end":23,"is_primary":true,"text":[{"text":"    #[pallet::pallet]","highlight_start":15,"highlight_end":22},{"text":"    pub struct Pallet<T>(_);","highlight_start":1,"highlight_end":29},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// LINK deposits from Ethereum to Ëtrid","highlight_start":1,"highlight_end":45},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn link_deposits)]","highlight_start":1,"highlight_end":40},{"text":"    pub type LinkDeposits<T: Config> = StorageMap<","highlight_start":1,"highlight_end":51},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        EthTxHash,","highlight_start":1,"highlight_end":19},{"text":"        (T::AccountId, BalanceOf<T>, BlockNumberFor<T>),","highlight_start":1,"highlight_end":57},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// LINK withdrawals from Ëtrid to Ethereum","highlight_start":1,"highlight_end":48},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn link_withdrawals)]","highlight_start":1,"highlight_end":43},{"text":"    pub type LinkWithdrawals<T: Config> = StorageMap<","highlight_start":1,"highlight_end":54},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        T::AccountId,","highlight_start":1,"highlight_end":22},{"text":"        BoundedVec<(EthereumAddress, BalanceOf<T>, BlockNumberFor<T>), T::MaxOracleNodes>,","highlight_start":1,"highlight_end":91},{"text":"        ValueQuery,","highlight_start":1,"highlight_end":20},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Registered Chainlink oracle nodes","highlight_start":1,"highlight_end":42},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn oracle_nodes)]","highlight_start":1,"highlight_end":39},{"text":"    pub type OracleNodes<T: Config> = StorageMap<","highlight_start":1,"highlight_end":50},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        T::AccountId,","highlight_start":1,"highlight_end":22},{"text":"        EthereumAddress,","highlight_start":1,"highlight_end":25},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Chainlink Data Feeds (e.g., LINK/USD, ETH/USD)","highlight_start":1,"highlight_end":55},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn data_feeds)]","highlight_start":1,"highlight_end":37},{"text":"    pub type DataFeeds<T: Config> = StorageMap<","highlight_start":1,"highlight_end":23}],"label":"the trait `WrapperTypeEncode` is not implemented for `OraclePrice`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `WrapperTypeEncode`:\n  &T\n  &mut T\n  Arc<T>\n  Box<T>\n  Cow<'_, T>\n  Rc<T>\n  Vec<T>\n  bytes::bytes::Bytes\nand 3 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `parity_scale_codec::Encode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `FullEncode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `StorageMap<_GeneratedPrefixForStorageDataFeeds<T>, ..., ..., ...>` to implement `StorageInfoTrait`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-11145608883861942922.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `OraclePrice: WrapperTypeEncode` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:101:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    #[pallet::pallet]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m _______________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct Pallet<T>(_);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// LINK deposits from Ethereum to Ëtrid\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::getter(fn data_feeds)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub type DataFeeds<T: Config> = StorageMap<\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|______________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeEncode` is not implemented for `OraclePrice`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapperTypeEncode`:\u001b[0m\n\u001b[0m              &T\u001b[0m\n\u001b[0m              &mut T\u001b[0m\n\u001b[0m              Arc<T>\u001b[0m\n\u001b[0m              Box<T>\u001b[0m\n\u001b[0m              Cow<'_, T>\u001b[0m\n\u001b[0m              Rc<T>\u001b[0m\n\u001b[0m              Vec<T>\u001b[0m\n\u001b[0m              bytes::bytes::Bytes\u001b[0m\n\u001b[0m            and 3 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `parity_scale_codec::Encode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `FullEncode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `FullCodec`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `StorageMap<_GeneratedPrefixForStorageDataFeeds<T>, ..., ..., ...>` to implement `StorageInfoTrait`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-11145608883861942922.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: MaxEncodedLen` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":3307,"byte_end":5656,"line_start":101,"line_end":179,"column_start":15,"column_end":25,"is_primary":true,"text":[{"text":"    #[pallet::pallet]","highlight_start":15,"highlight_end":22},{"text":"    pub struct Pallet<T>(_);","highlight_start":1,"highlight_end":29},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// LINK deposits from Ethereum to Ëtrid","highlight_start":1,"highlight_end":45},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn link_deposits)]","highlight_start":1,"highlight_end":40},{"text":"    pub type LinkDeposits<T: Config> = StorageMap<","highlight_start":1,"highlight_end":51},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        EthTxHash,","highlight_start":1,"highlight_end":19},{"text":"        (T::AccountId, BalanceOf<T>, BlockNumberFor<T>),","highlight_start":1,"highlight_end":57},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// LINK withdrawals from Ëtrid to Ethereum","highlight_start":1,"highlight_end":48},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn link_withdrawals)]","highlight_start":1,"highlight_end":43},{"text":"    pub type LinkWithdrawals<T: Config> = StorageMap<","highlight_start":1,"highlight_end":54},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        T::AccountId,","highlight_start":1,"highlight_end":22},{"text":"        BoundedVec<(EthereumAddress, BalanceOf<T>, BlockNumberFor<T>), T::MaxOracleNodes>,","highlight_start":1,"highlight_end":91},{"text":"        ValueQuery,","highlight_start":1,"highlight_end":20},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Registered Chainlink oracle nodes","highlight_start":1,"highlight_end":42},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn oracle_nodes)]","highlight_start":1,"highlight_end":39},{"text":"    pub type OracleNodes<T: Config> = StorageMap<","highlight_start":1,"highlight_end":50},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        T::AccountId,","highlight_start":1,"highlight_end":22},{"text":"        EthereumAddress,","highlight_start":1,"highlight_end":25},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Chainlink Data Feeds (e.g., LINK/USD, ETH/USD)","highlight_start":1,"highlight_end":55},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn data_feeds)]","highlight_start":1,"highlight_end":37},{"text":"    pub type DataFeeds<T: Config> = StorageMap<","highlight_start":1,"highlight_end":48},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        DataFeedId,","highlight_start":1,"highlight_end":20},{"text":"        OraclePrice,","highlight_start":1,"highlight_end":21},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// LINK ERC-20 contract address on Ethereum (ERC-677 compatible)","highlight_start":1,"highlight_end":70},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn link_token_address)]","highlight_start":1,"highlight_end":45},{"text":"    pub type LinkTokenAddress<T: Config> = StorageValue<_, EthereumAddress, ValueQuery>;","highlight_start":1,"highlight_end":89},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Bridge status (active/paused)","highlight_start":1,"highlight_end":38},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn bridge_active)]","highlight_start":1,"highlight_end":40},{"text":"    pub type BridgeActive<T: Config> = StorageValue<_, bool, ValueQuery>;","highlight_start":1,"highlight_end":74},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Total LINK locked in bridge","highlight_start":1,"highlight_end":36},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn total_locked)]","highlight_start":1,"highlight_end":39},{"text":"    pub type TotalLocked<T: Config> = StorageValue<_, BalanceOf<T>, ValueQuery>;","highlight_start":1,"highlight_end":81},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Ethereum bridge contract address","highlight_start":1,"highlight_end":41},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn eth_bridge_contract)]","highlight_start":1,"highlight_end":46},{"text":"    pub type EthBridgeContract<T: Config> = StorageValue<_, EthereumAddress>;","highlight_start":1,"highlight_end":78},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Whitelisted Chainlink operators for oracle submissions","highlight_start":1,"highlight_end":63},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn whitelisted_operators)]","highlight_start":1,"highlight_end":48},{"text":"    pub type WhitelistedOperators<T: Config> = StorageMap<","highlight_start":1,"highlight_end":59},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        T::AccountId,","highlight_start":1,"highlight_end":22},{"text":"        bool,","highlight_start":1,"highlight_end":14},{"text":"        ValueQuery,","highlight_start":1,"highlight_end":20},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// VRF requests by request ID","highlight_start":1,"highlight_end":35},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn vrf_requests)]","highlight_start":1,"highlight_end":39},{"text":"    pub type VRFRequests<T: Config> = StorageMap<","highlight_start":1,"highlight_end":25}],"label":"the trait `MaxEncodedLen` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `MaxEncodedLen`:\n  ()\n  (TupleElement0, TupleElement1)\n  (TupleElement0, TupleElement1, TupleElement2)\n  (TupleElement0, TupleElement1, TupleElement2, TupleElement3)\n  (TupleElement0, TupleElement1, TupleElement2, TupleElement3, TupleElement4)\n  (TupleElement0, TupleElement1, TupleElement2, TupleElement3, TupleElement4, TupleElement5)\n  (TupleElement0, TupleElement1, TupleElement2, TupleElement3, TupleElement4, TupleElement5, TupleElement6)\n  (TupleElement0, TupleElement1, TupleElement2, TupleElement3, TupleElement4, TupleElement5, TupleElement6, TupleElement7)\nand 125 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>` to implement `StorageInfoTrait`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-9718058397547285183.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: MaxEncodedLen` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:101:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    #[pallet::pallet]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m _______________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct Pallet<T>(_);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// LINK deposits from Ethereum to Ëtrid\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::getter(fn vrf_requests)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub type VRFRequests<T: Config> = StorageMap<\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|________________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `MaxEncodedLen` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `MaxEncodedLen`:\u001b[0m\n\u001b[0m              ()\u001b[0m\n\u001b[0m              (TupleElement0, TupleElement1)\u001b[0m\n\u001b[0m              (TupleElement0, TupleElement1, TupleElement2)\u001b[0m\n\u001b[0m              (TupleElement0, TupleElement1, TupleElement2, TupleElement3)\u001b[0m\n\u001b[0m              (TupleElement0, TupleElement1, TupleElement2, TupleElement3, TupleElement4)\u001b[0m\n\u001b[0m              (TupleElement0, TupleElement1, TupleElement2, TupleElement3, TupleElement4, TupleElement5)\u001b[0m\n\u001b[0m              (TupleElement0, TupleElement1, TupleElement2, TupleElement3, TupleElement4, TupleElement5, TupleElement6)\u001b[0m\n\u001b[0m              (TupleElement0, TupleElement1, TupleElement2, TupleElement3, TupleElement4, TupleElement5, TupleElement6, TupleElement7)\u001b[0m\n\u001b[0m            and 125 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>` to implement `StorageInfoTrait`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-9718058397547285183.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeDecode` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":3307,"byte_end":5656,"line_start":101,"line_end":179,"column_start":15,"column_end":25,"is_primary":true,"text":[{"text":"    #[pallet::pallet]","highlight_start":15,"highlight_end":22},{"text":"    pub struct Pallet<T>(_);","highlight_start":1,"highlight_end":29},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// LINK deposits from Ethereum to Ëtrid","highlight_start":1,"highlight_end":45},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn link_deposits)]","highlight_start":1,"highlight_end":40},{"text":"    pub type LinkDeposits<T: Config> = StorageMap<","highlight_start":1,"highlight_end":51},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        EthTxHash,","highlight_start":1,"highlight_end":19},{"text":"        (T::AccountId, BalanceOf<T>, BlockNumberFor<T>),","highlight_start":1,"highlight_end":57},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// LINK withdrawals from Ëtrid to Ethereum","highlight_start":1,"highlight_end":48},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn link_withdrawals)]","highlight_start":1,"highlight_end":43},{"text":"    pub type LinkWithdrawals<T: Config> = StorageMap<","highlight_start":1,"highlight_end":54},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        T::AccountId,","highlight_start":1,"highlight_end":22},{"text":"        BoundedVec<(EthereumAddress, BalanceOf<T>, BlockNumberFor<T>), T::MaxOracleNodes>,","highlight_start":1,"highlight_end":91},{"text":"        ValueQuery,","highlight_start":1,"highlight_end":20},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Registered Chainlink oracle nodes","highlight_start":1,"highlight_end":42},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn oracle_nodes)]","highlight_start":1,"highlight_end":39},{"text":"    pub type OracleNodes<T: Config> = StorageMap<","highlight_start":1,"highlight_end":50},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        T::AccountId,","highlight_start":1,"highlight_end":22},{"text":"        EthereumAddress,","highlight_start":1,"highlight_end":25},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Chainlink Data Feeds (e.g., LINK/USD, ETH/USD)","highlight_start":1,"highlight_end":55},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn data_feeds)]","highlight_start":1,"highlight_end":37},{"text":"    pub type DataFeeds<T: Config> = StorageMap<","highlight_start":1,"highlight_end":48},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        DataFeedId,","highlight_start":1,"highlight_end":20},{"text":"        OraclePrice,","highlight_start":1,"highlight_end":21},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// LINK ERC-20 contract address on Ethereum (ERC-677 compatible)","highlight_start":1,"highlight_end":70},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn link_token_address)]","highlight_start":1,"highlight_end":45},{"text":"    pub type LinkTokenAddress<T: Config> = StorageValue<_, EthereumAddress, ValueQuery>;","highlight_start":1,"highlight_end":89},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Bridge status (active/paused)","highlight_start":1,"highlight_end":38},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn bridge_active)]","highlight_start":1,"highlight_end":40},{"text":"    pub type BridgeActive<T: Config> = StorageValue<_, bool, ValueQuery>;","highlight_start":1,"highlight_end":74},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Total LINK locked in bridge","highlight_start":1,"highlight_end":36},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn total_locked)]","highlight_start":1,"highlight_end":39},{"text":"    pub type TotalLocked<T: Config> = StorageValue<_, BalanceOf<T>, ValueQuery>;","highlight_start":1,"highlight_end":81},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Ethereum bridge contract address","highlight_start":1,"highlight_end":41},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn eth_bridge_contract)]","highlight_start":1,"highlight_end":46},{"text":"    pub type EthBridgeContract<T: Config> = StorageValue<_, EthereumAddress>;","highlight_start":1,"highlight_end":78},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Whitelisted Chainlink operators for oracle submissions","highlight_start":1,"highlight_end":63},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn whitelisted_operators)]","highlight_start":1,"highlight_end":48},{"text":"    pub type WhitelistedOperators<T: Config> = StorageMap<","highlight_start":1,"highlight_end":59},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        T::AccountId,","highlight_start":1,"highlight_end":22},{"text":"        bool,","highlight_start":1,"highlight_end":14},{"text":"        ValueQuery,","highlight_start":1,"highlight_end":20},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// VRF requests by request ID","highlight_start":1,"highlight_end":35},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn vrf_requests)]","highlight_start":1,"highlight_end":39},{"text":"    pub type VRFRequests<T: Config> = StorageMap<","highlight_start":1,"highlight_end":25}],"label":"the trait `WrapperTypeDecode` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `WrapperTypeDecode`:\n  Arc<T>\n  Box<T>\n  Rc<T>\n  sp_core::Bytes","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `Decode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>` to implement `StorageInfoTrait`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-9718058397547285183.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeDecode` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:101:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    #[pallet::pallet]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m _______________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct Pallet<T>(_);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// LINK deposits from Ethereum to Ëtrid\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::getter(fn vrf_requests)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub type VRFRequests<T: Config> = StorageMap<\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|________________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeDecode` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapperTypeDecode`:\u001b[0m\n\u001b[0m              Arc<T>\u001b[0m\n\u001b[0m              Box<T>\u001b[0m\n\u001b[0m              Rc<T>\u001b[0m\n\u001b[0m              sp_core::Bytes\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `Decode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullCodec`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>` to implement `StorageInfoTrait`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-9718058397547285183.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: EncodeLike` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":3307,"byte_end":5656,"line_start":101,"line_end":179,"column_start":15,"column_end":25,"is_primary":true,"text":[{"text":"    #[pallet::pallet]","highlight_start":15,"highlight_end":22},{"text":"    pub struct Pallet<T>(_);","highlight_start":1,"highlight_end":29},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// LINK deposits from Ethereum to Ëtrid","highlight_start":1,"highlight_end":45},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn link_deposits)]","highlight_start":1,"highlight_end":40},{"text":"    pub type LinkDeposits<T: Config> = StorageMap<","highlight_start":1,"highlight_end":51},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        EthTxHash,","highlight_start":1,"highlight_end":19},{"text":"        (T::AccountId, BalanceOf<T>, BlockNumberFor<T>),","highlight_start":1,"highlight_end":57},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// LINK withdrawals from Ëtrid to Ethereum","highlight_start":1,"highlight_end":48},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn link_withdrawals)]","highlight_start":1,"highlight_end":43},{"text":"    pub type LinkWithdrawals<T: Config> = StorageMap<","highlight_start":1,"highlight_end":54},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        T::AccountId,","highlight_start":1,"highlight_end":22},{"text":"        BoundedVec<(EthereumAddress, BalanceOf<T>, BlockNumberFor<T>), T::MaxOracleNodes>,","highlight_start":1,"highlight_end":91},{"text":"        ValueQuery,","highlight_start":1,"highlight_end":20},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Registered Chainlink oracle nodes","highlight_start":1,"highlight_end":42},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn oracle_nodes)]","highlight_start":1,"highlight_end":39},{"text":"    pub type OracleNodes<T: Config> = StorageMap<","highlight_start":1,"highlight_end":50},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        T::AccountId,","highlight_start":1,"highlight_end":22},{"text":"        EthereumAddress,","highlight_start":1,"highlight_end":25},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Chainlink Data Feeds (e.g., LINK/USD, ETH/USD)","highlight_start":1,"highlight_end":55},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn data_feeds)]","highlight_start":1,"highlight_end":37},{"text":"    pub type DataFeeds<T: Config> = StorageMap<","highlight_start":1,"highlight_end":48},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        DataFeedId,","highlight_start":1,"highlight_end":20},{"text":"        OraclePrice,","highlight_start":1,"highlight_end":21},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// LINK ERC-20 contract address on Ethereum (ERC-677 compatible)","highlight_start":1,"highlight_end":70},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn link_token_address)]","highlight_start":1,"highlight_end":45},{"text":"    pub type LinkTokenAddress<T: Config> = StorageValue<_, EthereumAddress, ValueQuery>;","highlight_start":1,"highlight_end":89},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Bridge status (active/paused)","highlight_start":1,"highlight_end":38},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn bridge_active)]","highlight_start":1,"highlight_end":40},{"text":"    pub type BridgeActive<T: Config> = StorageValue<_, bool, ValueQuery>;","highlight_start":1,"highlight_end":74},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Total LINK locked in bridge","highlight_start":1,"highlight_end":36},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn total_locked)]","highlight_start":1,"highlight_end":39},{"text":"    pub type TotalLocked<T: Config> = StorageValue<_, BalanceOf<T>, ValueQuery>;","highlight_start":1,"highlight_end":81},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Ethereum bridge contract address","highlight_start":1,"highlight_end":41},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn eth_bridge_contract)]","highlight_start":1,"highlight_end":46},{"text":"    pub type EthBridgeContract<T: Config> = StorageValue<_, EthereumAddress>;","highlight_start":1,"highlight_end":78},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Whitelisted Chainlink operators for oracle submissions","highlight_start":1,"highlight_end":63},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn whitelisted_operators)]","highlight_start":1,"highlight_end":48},{"text":"    pub type WhitelistedOperators<T: Config> = StorageMap<","highlight_start":1,"highlight_end":59},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        T::AccountId,","highlight_start":1,"highlight_end":22},{"text":"        bool,","highlight_start":1,"highlight_end":14},{"text":"        ValueQuery,","highlight_start":1,"highlight_end":20},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// VRF requests by request ID","highlight_start":1,"highlight_end":35},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn vrf_requests)]","highlight_start":1,"highlight_end":39},{"text":"    pub type VRFRequests<T: Config> = StorageMap<","highlight_start":1,"highlight_end":25}],"label":"the trait `EncodeLike` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `EncodeLike<T>`:\n  `&&T` implements `EncodeLike<T>`\n  `&T` implements `EncodeLike<T>`\n  `&T` implements `EncodeLike`\n  `&[(K, V)]` implements `EncodeLike<BTreeMap<LikeK, LikeV>>`\n  `&[(T,)]` implements `EncodeLike<BTreeSet<LikeT>>`\n  `&[(T,)]` implements `EncodeLike<BinaryHeap<LikeT>>`\n  `&[(T,)]` implements `EncodeLike<LinkedList<LikeT>>`\n  `&[T]` implements `EncodeLike<Vec<U>>`\nand 374 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullEncode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>` to implement `StorageInfoTrait`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-9718058397547285183.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: EncodeLike` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:101:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    #[pallet::pallet]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m _______________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct Pallet<T>(_);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// LINK deposits from Ethereum to Ëtrid\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::getter(fn vrf_requests)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub type VRFRequests<T: Config> = StorageMap<\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|________________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `EncodeLike` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `EncodeLike<T>`:\u001b[0m\n\u001b[0m              `&&T` implements `EncodeLike<T>`\u001b[0m\n\u001b[0m              `&T` implements `EncodeLike<T>`\u001b[0m\n\u001b[0m              `&T` implements `EncodeLike`\u001b[0m\n\u001b[0m              `&[(K, V)]` implements `EncodeLike<BTreeMap<LikeK, LikeV>>`\u001b[0m\n\u001b[0m              `&[(T,)]` implements `EncodeLike<BTreeSet<LikeT>>`\u001b[0m\n\u001b[0m              `&[(T,)]` implements `EncodeLike<BinaryHeap<LikeT>>`\u001b[0m\n\u001b[0m              `&[(T,)]` implements `EncodeLike<LinkedList<LikeT>>`\u001b[0m\n\u001b[0m              `&[T]` implements `EncodeLike<Vec<U>>`\u001b[0m\n\u001b[0m            and 374 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullEncode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullCodec`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>` to implement `StorageInfoTrait`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-9718058397547285183.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeEncode` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":3307,"byte_end":5656,"line_start":101,"line_end":179,"column_start":15,"column_end":25,"is_primary":true,"text":[{"text":"    #[pallet::pallet]","highlight_start":15,"highlight_end":22},{"text":"    pub struct Pallet<T>(_);","highlight_start":1,"highlight_end":29},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// LINK deposits from Ethereum to Ëtrid","highlight_start":1,"highlight_end":45},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn link_deposits)]","highlight_start":1,"highlight_end":40},{"text":"    pub type LinkDeposits<T: Config> = StorageMap<","highlight_start":1,"highlight_end":51},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        EthTxHash,","highlight_start":1,"highlight_end":19},{"text":"        (T::AccountId, BalanceOf<T>, BlockNumberFor<T>),","highlight_start":1,"highlight_end":57},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// LINK withdrawals from Ëtrid to Ethereum","highlight_start":1,"highlight_end":48},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn link_withdrawals)]","highlight_start":1,"highlight_end":43},{"text":"    pub type LinkWithdrawals<T: Config> = StorageMap<","highlight_start":1,"highlight_end":54},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        T::AccountId,","highlight_start":1,"highlight_end":22},{"text":"        BoundedVec<(EthereumAddress, BalanceOf<T>, BlockNumberFor<T>), T::MaxOracleNodes>,","highlight_start":1,"highlight_end":91},{"text":"        ValueQuery,","highlight_start":1,"highlight_end":20},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Registered Chainlink oracle nodes","highlight_start":1,"highlight_end":42},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn oracle_nodes)]","highlight_start":1,"highlight_end":39},{"text":"    pub type OracleNodes<T: Config> = StorageMap<","highlight_start":1,"highlight_end":50},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        T::AccountId,","highlight_start":1,"highlight_end":22},{"text":"        EthereumAddress,","highlight_start":1,"highlight_end":25},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Chainlink Data Feeds (e.g., LINK/USD, ETH/USD)","highlight_start":1,"highlight_end":55},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn data_feeds)]","highlight_start":1,"highlight_end":37},{"text":"    pub type DataFeeds<T: Config> = StorageMap<","highlight_start":1,"highlight_end":48},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        DataFeedId,","highlight_start":1,"highlight_end":20},{"text":"        OraclePrice,","highlight_start":1,"highlight_end":21},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// LINK ERC-20 contract address on Ethereum (ERC-677 compatible)","highlight_start":1,"highlight_end":70},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn link_token_address)]","highlight_start":1,"highlight_end":45},{"text":"    pub type LinkTokenAddress<T: Config> = StorageValue<_, EthereumAddress, ValueQuery>;","highlight_start":1,"highlight_end":89},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Bridge status (active/paused)","highlight_start":1,"highlight_end":38},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn bridge_active)]","highlight_start":1,"highlight_end":40},{"text":"    pub type BridgeActive<T: Config> = StorageValue<_, bool, ValueQuery>;","highlight_start":1,"highlight_end":74},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Total LINK locked in bridge","highlight_start":1,"highlight_end":36},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn total_locked)]","highlight_start":1,"highlight_end":39},{"text":"    pub type TotalLocked<T: Config> = StorageValue<_, BalanceOf<T>, ValueQuery>;","highlight_start":1,"highlight_end":81},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Ethereum bridge contract address","highlight_start":1,"highlight_end":41},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn eth_bridge_contract)]","highlight_start":1,"highlight_end":46},{"text":"    pub type EthBridgeContract<T: Config> = StorageValue<_, EthereumAddress>;","highlight_start":1,"highlight_end":78},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// Whitelisted Chainlink operators for oracle submissions","highlight_start":1,"highlight_end":63},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn whitelisted_operators)]","highlight_start":1,"highlight_end":48},{"text":"    pub type WhitelistedOperators<T: Config> = StorageMap<","highlight_start":1,"highlight_end":59},{"text":"        _,","highlight_start":1,"highlight_end":11},{"text":"        Blake2_128Concat,","highlight_start":1,"highlight_end":26},{"text":"        T::AccountId,","highlight_start":1,"highlight_end":22},{"text":"        bool,","highlight_start":1,"highlight_end":14},{"text":"        ValueQuery,","highlight_start":1,"highlight_end":20},{"text":"    >;","highlight_start":1,"highlight_end":7},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    /// VRF requests by request ID","highlight_start":1,"highlight_end":35},{"text":"    #[pallet::storage]","highlight_start":1,"highlight_end":23},{"text":"    #[pallet::getter(fn vrf_requests)]","highlight_start":1,"highlight_end":39},{"text":"    pub type VRFRequests<T: Config> = StorageMap<","highlight_start":1,"highlight_end":25}],"label":"the trait `WrapperTypeEncode` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `WrapperTypeEncode`:\n  &T\n  &mut T\n  Arc<T>\n  Box<T>\n  Cow<'_, T>\n  Rc<T>\n  Vec<T>\n  bytes::bytes::Bytes\nand 3 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `parity_scale_codec::Encode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullEncode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>` to implement `StorageInfoTrait`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-9718058397547285183.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeEncode` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:101:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    #[pallet::pallet]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m _______________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct Pallet<T>(_);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    /// LINK deposits from Ethereum to Ëtrid\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::getter(fn vrf_requests)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub type VRFRequests<T: Config> = StorageMap<\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|________________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeEncode` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapperTypeEncode`:\u001b[0m\n\u001b[0m              &T\u001b[0m\n\u001b[0m              &mut T\u001b[0m\n\u001b[0m              Arc<T>\u001b[0m\n\u001b[0m              Box<T>\u001b[0m\n\u001b[0m              Cow<'_, T>\u001b[0m\n\u001b[0m              Rc<T>\u001b[0m\n\u001b[0m              Vec<T>\u001b[0m\n\u001b[0m              bytes::bytes::Bytes\u001b[0m\n\u001b[0m            and 3 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `parity_scale_codec::Encode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullEncode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullCodec`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>` to implement `StorageInfoTrait`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-9718058397547285183.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the method `encode` exists for enum `pallet::Error<T>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":8091,"byte_end":8096,"line_start":255,"line_end":255,"column_start":15,"column_end":20,"is_primary":true,"text":[{"text":"    #[pallet::error]","highlight_start":15,"highlight_end":20}],"label":"method cannot be called on `pallet::Error<T>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":8102,"byte_end":8119,"line_start":256,"line_end":256,"column_start":5,"column_end":22,"is_primary":false,"text":[{"text":"    pub enum Error<T> {","highlight_start":5,"highlight_end":22}],"label":"method `encode` not found for this enum because it doesn't satisfy `<pallet::Error<T> as Deref>::Target = _`, `pallet::Error<T>: WrapperTypeEncode` or `pallet::Error<T>: parity_scale_codec::Encode`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`<pallet::Error<T> as Deref>::Target = _`\nwhich is required by `pallet::Error<T>: parity_scale_codec::Encode`\n`pallet::Error<T>: WrapperTypeEncode`\nwhich is required by `pallet::Error<T>: parity_scale_codec::Encode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the trait `WrapperTypeEncode` must be implemented","code":null,"level":"note","spans":[{"file_name":"/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/codec.rs","byte_start":11352,"byte_end":11386,"line_start":367,"line_end":367,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"pub trait WrapperTypeEncode: Deref {}","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"items from traits can only be used if the trait is implemented and in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following traits define an item `encode`, perhaps you need to implement one of them:\ncandidate #1: `base64::engine::Engine`\ncandidate #2: `base64::engine::Engine`\ncandidate #3: `base64ct::encoding::Encoding`\ncandidate #4: `der::encode::Encode`\ncandidate #5: `parity_scale_codec::Encode`\ncandidate #6: `prometheus::encoder::Encoder`\ncandidate #7: `tokio_util::codec::encoder::Encoder`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `encode` exists for enum `pallet::Error<T>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:255:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m255\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::error]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `pallet::Error<T>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m256\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub enum Error<T> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethod `encode` not found for this enum because it doesn't satisfy `<pallet::Error<T> as Deref>::Target = _`, `pallet::Error<T>: WrapperTypeEncode` or `pallet::Error<T>: parity_scale_codec::Encode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m            `<pallet::Error<T> as Deref>::Target = _`\u001b[0m\n\u001b[0m            which is required by `pallet::Error<T>: parity_scale_codec::Encode`\u001b[0m\n\u001b[0m            `pallet::Error<T>: WrapperTypeEncode`\u001b[0m\n\u001b[0m            which is required by `pallet::Error<T>: parity_scale_codec::Encode`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the trait `WrapperTypeEncode` must be implemented\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parity-scale-codec-3.7.5/src/codec.rs:367:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m367\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait WrapperTypeEncode: Deref {}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is implemented and in scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following traits define an item `encode`, perhaps you need to implement one of them:\u001b[0m\n\u001b[0m            candidate #1: `base64::engine::Engine`\u001b[0m\n\u001b[0m            candidate #2: `base64::engine::Engine`\u001b[0m\n\u001b[0m            candidate #3: `base64ct::encoding::Encoding`\u001b[0m\n\u001b[0m            candidate #4: `der::encode::Encode`\u001b[0m\n\u001b[0m            candidate #5: `parity_scale_codec::Encode`\u001b[0m\n\u001b[0m            candidate #6: `prometheus::encoder::Encoder`\u001b[0m\n\u001b[0m            candidate #7: `tokio_util::codec::encoder::Encoder`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `OraclePrice: WrapperTypeDecode` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":4288,"byte_end":4356,"line_start":136,"line_end":138,"column_start":15,"column_end":23,"is_primary":true,"text":[{"text":"    #[pallet::storage]","highlight_start":15,"highlight_end":23},{"text":"    #[pallet::getter(fn data_feeds)]","highlight_start":1,"highlight_end":37},{"text":"    pub type DataFeeds<T: Config> = StorageMap<","highlight_start":1,"highlight_end":23}],"label":"the trait `WrapperTypeDecode` is not implemented for `OraclePrice`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `WrapperTypeDecode`:\n  Arc<T>\n  Box<T>\n  Rc<T>\n  sp_core::Bytes","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `Decode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `StorageMap<_GeneratedPrefixForStorageDataFeeds<T>, ..., ..., ...>` to implement `StorageEntryMetadataBuilder`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-11145608883861942922.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `OraclePrice: WrapperTypeDecode` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:136:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    #[pallet::storage]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m _______________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::getter(fn data_feeds)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub type DataFeeds<T: Config> = StorageMap<\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|______________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeDecode` is not implemented for `OraclePrice`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapperTypeDecode`:\u001b[0m\n\u001b[0m              Arc<T>\u001b[0m\n\u001b[0m              Box<T>\u001b[0m\n\u001b[0m              Rc<T>\u001b[0m\n\u001b[0m              sp_core::Bytes\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `Decode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `FullCodec`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `StorageMap<_GeneratedPrefixForStorageDataFeeds<T>, ..., ..., ...>` to implement `StorageEntryMetadataBuilder`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-11145608883861942922.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `OraclePrice: EncodeLike` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":4288,"byte_end":4356,"line_start":136,"line_end":138,"column_start":15,"column_end":23,"is_primary":true,"text":[{"text":"    #[pallet::storage]","highlight_start":15,"highlight_end":23},{"text":"    #[pallet::getter(fn data_feeds)]","highlight_start":1,"highlight_end":37},{"text":"    pub type DataFeeds<T: Config> = StorageMap<","highlight_start":1,"highlight_end":23}],"label":"the trait `EncodeLike` is not implemented for `OraclePrice`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `EncodeLike<T>`:\n  `&&T` implements `EncodeLike<T>`\n  `&T` implements `EncodeLike<T>`\n  `&T` implements `EncodeLike`\n  `&[(K, V)]` implements `EncodeLike<BTreeMap<LikeK, LikeV>>`\n  `&[(T,)]` implements `EncodeLike<BTreeSet<LikeT>>`\n  `&[(T,)]` implements `EncodeLike<BinaryHeap<LikeT>>`\n  `&[(T,)]` implements `EncodeLike<LinkedList<LikeT>>`\n  `&[T]` implements `EncodeLike<Vec<U>>`\nand 374 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `FullEncode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `StorageMap<_GeneratedPrefixForStorageDataFeeds<T>, ..., ..., ...>` to implement `StorageEntryMetadataBuilder`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-11145608883861942922.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `OraclePrice: EncodeLike` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:136:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    #[pallet::storage]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m _______________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::getter(fn data_feeds)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub type DataFeeds<T: Config> = StorageMap<\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|______________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `EncodeLike` is not implemented for `OraclePrice`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `EncodeLike<T>`:\u001b[0m\n\u001b[0m              `&&T` implements `EncodeLike<T>`\u001b[0m\n\u001b[0m              `&T` implements `EncodeLike<T>`\u001b[0m\n\u001b[0m              `&T` implements `EncodeLike`\u001b[0m\n\u001b[0m              `&[(K, V)]` implements `EncodeLike<BTreeMap<LikeK, LikeV>>`\u001b[0m\n\u001b[0m              `&[(T,)]` implements `EncodeLike<BTreeSet<LikeT>>`\u001b[0m\n\u001b[0m              `&[(T,)]` implements `EncodeLike<BinaryHeap<LikeT>>`\u001b[0m\n\u001b[0m              `&[(T,)]` implements `EncodeLike<LinkedList<LikeT>>`\u001b[0m\n\u001b[0m              `&[T]` implements `EncodeLike<Vec<U>>`\u001b[0m\n\u001b[0m            and 374 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `FullEncode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `FullCodec`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `StorageMap<_GeneratedPrefixForStorageDataFeeds<T>, ..., ..., ...>` to implement `StorageEntryMetadataBuilder`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-11145608883861942922.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `OraclePrice: WrapperTypeEncode` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":4288,"byte_end":4356,"line_start":136,"line_end":138,"column_start":15,"column_end":23,"is_primary":true,"text":[{"text":"    #[pallet::storage]","highlight_start":15,"highlight_end":23},{"text":"    #[pallet::getter(fn data_feeds)]","highlight_start":1,"highlight_end":37},{"text":"    pub type DataFeeds<T: Config> = StorageMap<","highlight_start":1,"highlight_end":23}],"label":"the trait `WrapperTypeEncode` is not implemented for `OraclePrice`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `WrapperTypeEncode`:\n  &T\n  &mut T\n  Arc<T>\n  Box<T>\n  Cow<'_, T>\n  Rc<T>\n  Vec<T>\n  bytes::bytes::Bytes\nand 3 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `parity_scale_codec::Encode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `FullEncode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `StorageMap<_GeneratedPrefixForStorageDataFeeds<T>, ..., ..., ...>` to implement `StorageEntryMetadataBuilder`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-11145608883861942922.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `OraclePrice: WrapperTypeEncode` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:136:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    #[pallet::storage]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m _______________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m137\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::getter(fn data_feeds)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub type DataFeeds<T: Config> = StorageMap<\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|______________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeEncode` is not implemented for `OraclePrice`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapperTypeEncode`:\u001b[0m\n\u001b[0m              &T\u001b[0m\n\u001b[0m              &mut T\u001b[0m\n\u001b[0m              Arc<T>\u001b[0m\n\u001b[0m              Box<T>\u001b[0m\n\u001b[0m              Cow<'_, T>\u001b[0m\n\u001b[0m              Rc<T>\u001b[0m\n\u001b[0m              Vec<T>\u001b[0m\n\u001b[0m              bytes::bytes::Bytes\u001b[0m\n\u001b[0m            and 3 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `parity_scale_codec::Encode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `FullEncode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `FullCodec`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `StorageMap<_GeneratedPrefixForStorageDataFeeds<T>, ..., ..., ...>` to implement `StorageEntryMetadataBuilder`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-11145608883861942922.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeDecode` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":5584,"byte_end":5656,"line_start":177,"line_end":179,"column_start":15,"column_end":25,"is_primary":true,"text":[{"text":"    #[pallet::storage]","highlight_start":15,"highlight_end":23},{"text":"    #[pallet::getter(fn vrf_requests)]","highlight_start":1,"highlight_end":39},{"text":"    pub type VRFRequests<T: Config> = StorageMap<","highlight_start":1,"highlight_end":25}],"label":"the trait `WrapperTypeDecode` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `WrapperTypeDecode`:\n  Arc<T>\n  Box<T>\n  Rc<T>\n  sp_core::Bytes","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `Decode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>` to implement `StorageEntryMetadataBuilder`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-9718058397547285183.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeDecode` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:177:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    #[pallet::storage]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m _______________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::getter(fn vrf_requests)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub type VRFRequests<T: Config> = StorageMap<\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|________________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeDecode` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapperTypeDecode`:\u001b[0m\n\u001b[0m              Arc<T>\u001b[0m\n\u001b[0m              Box<T>\u001b[0m\n\u001b[0m              Rc<T>\u001b[0m\n\u001b[0m              sp_core::Bytes\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `Decode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullCodec`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>` to implement `StorageEntryMetadataBuilder`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-9718058397547285183.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: EncodeLike` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":5584,"byte_end":5656,"line_start":177,"line_end":179,"column_start":15,"column_end":25,"is_primary":true,"text":[{"text":"    #[pallet::storage]","highlight_start":15,"highlight_end":23},{"text":"    #[pallet::getter(fn vrf_requests)]","highlight_start":1,"highlight_end":39},{"text":"    pub type VRFRequests<T: Config> = StorageMap<","highlight_start":1,"highlight_end":25}],"label":"the trait `EncodeLike` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `EncodeLike<T>`:\n  `&&T` implements `EncodeLike<T>`\n  `&T` implements `EncodeLike<T>`\n  `&T` implements `EncodeLike`\n  `&[(K, V)]` implements `EncodeLike<BTreeMap<LikeK, LikeV>>`\n  `&[(T,)]` implements `EncodeLike<BTreeSet<LikeT>>`\n  `&[(T,)]` implements `EncodeLike<BinaryHeap<LikeT>>`\n  `&[(T,)]` implements `EncodeLike<LinkedList<LikeT>>`\n  `&[T]` implements `EncodeLike<Vec<U>>`\nand 374 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullEncode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>` to implement `StorageEntryMetadataBuilder`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-9718058397547285183.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: EncodeLike` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:177:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    #[pallet::storage]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m _______________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::getter(fn vrf_requests)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub type VRFRequests<T: Config> = StorageMap<\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|________________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `EncodeLike` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `EncodeLike<T>`:\u001b[0m\n\u001b[0m              `&&T` implements `EncodeLike<T>`\u001b[0m\n\u001b[0m              `&T` implements `EncodeLike<T>`\u001b[0m\n\u001b[0m              `&T` implements `EncodeLike`\u001b[0m\n\u001b[0m              `&[(K, V)]` implements `EncodeLike<BTreeMap<LikeK, LikeV>>`\u001b[0m\n\u001b[0m              `&[(T,)]` implements `EncodeLike<BTreeSet<LikeT>>`\u001b[0m\n\u001b[0m              `&[(T,)]` implements `EncodeLike<BinaryHeap<LikeT>>`\u001b[0m\n\u001b[0m              `&[(T,)]` implements `EncodeLike<LinkedList<LikeT>>`\u001b[0m\n\u001b[0m              `&[T]` implements `EncodeLike<Vec<U>>`\u001b[0m\n\u001b[0m            and 374 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullEncode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullCodec`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>` to implement `StorageEntryMetadataBuilder`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-9718058397547285183.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeEncode` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":5584,"byte_end":5656,"line_start":177,"line_end":179,"column_start":15,"column_end":25,"is_primary":true,"text":[{"text":"    #[pallet::storage]","highlight_start":15,"highlight_end":23},{"text":"    #[pallet::getter(fn vrf_requests)]","highlight_start":1,"highlight_end":39},{"text":"    pub type VRFRequests<T: Config> = StorageMap<","highlight_start":1,"highlight_end":25}],"label":"the trait `WrapperTypeEncode` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `WrapperTypeEncode`:\n  &T\n  &mut T\n  Arc<T>\n  Box<T>\n  Cow<'_, T>\n  Rc<T>\n  Vec<T>\n  bytes::bytes::Bytes\nand 3 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `parity_scale_codec::Encode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullEncode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>` to implement `StorageEntryMetadataBuilder`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-9718058397547285183.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: WrapperTypeEncode` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:177:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    #[pallet::storage]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m _______________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::getter(fn vrf_requests)]\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub type VRFRequests<T: Config> = StorageMap<\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|________________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeEncode` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapperTypeEncode`:\u001b[0m\n\u001b[0m              &T\u001b[0m\n\u001b[0m              &mut T\u001b[0m\n\u001b[0m              Arc<T>\u001b[0m\n\u001b[0m              Box<T>\u001b[0m\n\u001b[0m              Cow<'_, T>\u001b[0m\n\u001b[0m              Rc<T>\u001b[0m\n\u001b[0m              Vec<T>\u001b[0m\n\u001b[0m              bytes::bytes::Bytes\u001b[0m\n\u001b[0m            and 3 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `parity_scale_codec::Encode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullEncode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullCodec`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>` to implement `StorageEntryMetadataBuilder`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-9718058397547285183.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `OraclePrice: FullCodec` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":4447,"byte_end":4458,"line_start":142,"line_end":142,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        OraclePrice,","highlight_start":9,"highlight_end":20}],"label":"the trait `WrapperTypeDecode` is not implemented for `OraclePrice`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `WrapperTypeDecode`:\n  Arc<T>\n  Box<T>\n  Rc<T>\n  sp_core::Bytes","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `Decode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `frame_support::StorageMap::get`","code":null,"level":"note","spans":[{"file_name":"/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/storage/mod.rs","byte_start":9326,"byte_end":9329,"line_start":282,"line_end":282,"column_start":5,"column_end":8,"is_primary":false,"text":[{"text":"\tfn get<KeyArg: EncodeLike<K>>(key: KeyArg) -> Self::Query;","highlight_start":5,"highlight_end":8}],"label":"required by a bound in this associated function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/storage/mod.rs","byte_start":8933,"byte_end":8942,"line_start":271,"line_end":271,"column_start":40,"column_end":49,"is_primary":true,"text":[{"text":"pub trait StorageMap<K: FullEncode, V: FullCodec> {","highlight_start":40,"highlight_end":49}],"label":"required by this bound in `StorageMap::get`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `OraclePrice: FullCodec` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:142:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        OraclePrice,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeDecode` is not implemented for `OraclePrice`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapperTypeDecode`:\u001b[0m\n\u001b[0m              Arc<T>\u001b[0m\n\u001b[0m              Box<T>\u001b[0m\n\u001b[0m              Rc<T>\u001b[0m\n\u001b[0m              sp_core::Bytes\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `Decode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `FullCodec`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `frame_support::StorageMap::get`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/storage/mod.rs:271:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m271\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait StorageMap<K: FullEncode, V: FullCodec> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `StorageMap::get`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m282\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get<KeyArg: EncodeLike<K>>(key: KeyArg) -> Self::Query;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this associated function\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `OraclePrice: FullCodec` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":4447,"byte_end":4458,"line_start":142,"line_end":142,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        OraclePrice,","highlight_start":9,"highlight_end":20}],"label":"the trait `EncodeLike` is not implemented for `OraclePrice`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `EncodeLike<T>`:\n  `&&T` implements `EncodeLike<T>`\n  `&T` implements `EncodeLike<T>`\n  `&T` implements `EncodeLike`\n  `&[(K, V)]` implements `EncodeLike<BTreeMap<LikeK, LikeV>>`\n  `&[(T,)]` implements `EncodeLike<BTreeSet<LikeT>>`\n  `&[(T,)]` implements `EncodeLike<BinaryHeap<LikeT>>`\n  `&[(T,)]` implements `EncodeLike<LinkedList<LikeT>>`\n  `&[T]` implements `EncodeLike<Vec<U>>`\nand 374 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `FullEncode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `frame_support::StorageMap::get`","code":null,"level":"note","spans":[{"file_name":"/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/storage/mod.rs","byte_start":9326,"byte_end":9329,"line_start":282,"line_end":282,"column_start":5,"column_end":8,"is_primary":false,"text":[{"text":"\tfn get<KeyArg: EncodeLike<K>>(key: KeyArg) -> Self::Query;","highlight_start":5,"highlight_end":8}],"label":"required by a bound in this associated function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/storage/mod.rs","byte_start":8933,"byte_end":8942,"line_start":271,"line_end":271,"column_start":40,"column_end":49,"is_primary":true,"text":[{"text":"pub trait StorageMap<K: FullEncode, V: FullCodec> {","highlight_start":40,"highlight_end":49}],"label":"required by this bound in `StorageMap::get`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `OraclePrice: FullCodec` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:142:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        OraclePrice,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `EncodeLike` is not implemented for `OraclePrice`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `EncodeLike<T>`:\u001b[0m\n\u001b[0m              `&&T` implements `EncodeLike<T>`\u001b[0m\n\u001b[0m              `&T` implements `EncodeLike<T>`\u001b[0m\n\u001b[0m              `&T` implements `EncodeLike`\u001b[0m\n\u001b[0m              `&[(K, V)]` implements `EncodeLike<BTreeMap<LikeK, LikeV>>`\u001b[0m\n\u001b[0m              `&[(T,)]` implements `EncodeLike<BTreeSet<LikeT>>`\u001b[0m\n\u001b[0m              `&[(T,)]` implements `EncodeLike<BinaryHeap<LikeT>>`\u001b[0m\n\u001b[0m              `&[(T,)]` implements `EncodeLike<LinkedList<LikeT>>`\u001b[0m\n\u001b[0m              `&[T]` implements `EncodeLike<Vec<U>>`\u001b[0m\n\u001b[0m            and 374 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `FullEncode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `FullCodec`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `frame_support::StorageMap::get`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/storage/mod.rs:271:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m271\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait StorageMap<K: FullEncode, V: FullCodec> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `StorageMap::get`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m282\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get<KeyArg: EncodeLike<K>>(key: KeyArg) -> Self::Query;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this associated function\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `OraclePrice: FullCodec` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":4447,"byte_end":4458,"line_start":142,"line_end":142,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"        OraclePrice,","highlight_start":9,"highlight_end":20}],"label":"the trait `WrapperTypeEncode` is not implemented for `OraclePrice`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `WrapperTypeEncode`:\n  &T\n  &mut T\n  Arc<T>\n  Box<T>\n  Cow<'_, T>\n  Rc<T>\n  Vec<T>\n  bytes::bytes::Bytes\nand 3 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `parity_scale_codec::Encode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `FullEncode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `frame_support::StorageMap::get`","code":null,"level":"note","spans":[{"file_name":"/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/storage/mod.rs","byte_start":9326,"byte_end":9329,"line_start":282,"line_end":282,"column_start":5,"column_end":8,"is_primary":false,"text":[{"text":"\tfn get<KeyArg: EncodeLike<K>>(key: KeyArg) -> Self::Query;","highlight_start":5,"highlight_end":8}],"label":"required by a bound in this associated function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/storage/mod.rs","byte_start":8933,"byte_end":8942,"line_start":271,"line_end":271,"column_start":40,"column_end":49,"is_primary":true,"text":[{"text":"pub trait StorageMap<K: FullEncode, V: FullCodec> {","highlight_start":40,"highlight_end":49}],"label":"required by this bound in `StorageMap::get`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `OraclePrice: FullCodec` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:142:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m142\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        OraclePrice,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeEncode` is not implemented for `OraclePrice`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapperTypeEncode`:\u001b[0m\n\u001b[0m              &T\u001b[0m\n\u001b[0m              &mut T\u001b[0m\n\u001b[0m              Arc<T>\u001b[0m\n\u001b[0m              Box<T>\u001b[0m\n\u001b[0m              Cow<'_, T>\u001b[0m\n\u001b[0m              Rc<T>\u001b[0m\n\u001b[0m              Vec<T>\u001b[0m\n\u001b[0m              bytes::bytes::Bytes\u001b[0m\n\u001b[0m            and 3 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `parity_scale_codec::Encode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `FullEncode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `FullCodec`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `frame_support::StorageMap::get`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/storage/mod.rs:271:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m271\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait StorageMap<K: FullEncode, V: FullCodec> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `StorageMap::get`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m282\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get<KeyArg: EncodeLike<K>>(key: KeyArg) -> Self::Query;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this associated function\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `OraclePrice: FullCodec` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":4288,"byte_end":4295,"line_start":136,"line_end":136,"column_start":15,"column_end":22,"is_primary":true,"text":[{"text":"    #[pallet::storage]","highlight_start":15,"highlight_end":22}],"label":"the trait `WrapperTypeDecode` is not implemented for `OraclePrice`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `WrapperTypeDecode`:\n  Arc<T>\n  Box<T>\n  Rc<T>\n  sp_core::Bytes","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `Decode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `StorageMap<_GeneratedPrefixForStorageDataFeeds<T>, ..., ..., ...>` to implement `frame_support::StorageMap<sp_core::H256, OraclePrice>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-11145608883861942922.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `OraclePrice: FullCodec` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:136:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::storage]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeDecode` is not implemented for `OraclePrice`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapperTypeDecode`:\u001b[0m\n\u001b[0m              Arc<T>\u001b[0m\n\u001b[0m              Box<T>\u001b[0m\n\u001b[0m              Rc<T>\u001b[0m\n\u001b[0m              sp_core::Bytes\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `Decode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `FullCodec`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `StorageMap<_GeneratedPrefixForStorageDataFeeds<T>, ..., ..., ...>` to implement `frame_support::StorageMap<sp_core::H256, OraclePrice>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-11145608883861942922.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `OraclePrice: FullCodec` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":4288,"byte_end":4295,"line_start":136,"line_end":136,"column_start":15,"column_end":22,"is_primary":true,"text":[{"text":"    #[pallet::storage]","highlight_start":15,"highlight_end":22}],"label":"the trait `EncodeLike` is not implemented for `OraclePrice`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `EncodeLike<T>`:\n  `&&T` implements `EncodeLike<T>`\n  `&T` implements `EncodeLike<T>`\n  `&T` implements `EncodeLike`\n  `&[(K, V)]` implements `EncodeLike<BTreeMap<LikeK, LikeV>>`\n  `&[(T,)]` implements `EncodeLike<BTreeSet<LikeT>>`\n  `&[(T,)]` implements `EncodeLike<BinaryHeap<LikeT>>`\n  `&[(T,)]` implements `EncodeLike<LinkedList<LikeT>>`\n  `&[T]` implements `EncodeLike<Vec<U>>`\nand 374 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `FullEncode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `StorageMap<_GeneratedPrefixForStorageDataFeeds<T>, ..., ..., ...>` to implement `frame_support::StorageMap<sp_core::H256, OraclePrice>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-11145608883861942922.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `OraclePrice: FullCodec` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:136:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::storage]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `EncodeLike` is not implemented for `OraclePrice`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `EncodeLike<T>`:\u001b[0m\n\u001b[0m              `&&T` implements `EncodeLike<T>`\u001b[0m\n\u001b[0m              `&T` implements `EncodeLike<T>`\u001b[0m\n\u001b[0m              `&T` implements `EncodeLike`\u001b[0m\n\u001b[0m              `&[(K, V)]` implements `EncodeLike<BTreeMap<LikeK, LikeV>>`\u001b[0m\n\u001b[0m              `&[(T,)]` implements `EncodeLike<BTreeSet<LikeT>>`\u001b[0m\n\u001b[0m              `&[(T,)]` implements `EncodeLike<BinaryHeap<LikeT>>`\u001b[0m\n\u001b[0m              `&[(T,)]` implements `EncodeLike<LinkedList<LikeT>>`\u001b[0m\n\u001b[0m              `&[T]` implements `EncodeLike<Vec<U>>`\u001b[0m\n\u001b[0m            and 374 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `FullEncode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `FullCodec`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `StorageMap<_GeneratedPrefixForStorageDataFeeds<T>, ..., ..., ...>` to implement `frame_support::StorageMap<sp_core::H256, OraclePrice>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-11145608883861942922.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `OraclePrice: FullCodec` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":4288,"byte_end":4295,"line_start":136,"line_end":136,"column_start":15,"column_end":22,"is_primary":true,"text":[{"text":"    #[pallet::storage]","highlight_start":15,"highlight_end":22}],"label":"the trait `WrapperTypeEncode` is not implemented for `OraclePrice`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `WrapperTypeEncode`:\n  &T\n  &mut T\n  Arc<T>\n  Box<T>\n  Cow<'_, T>\n  Rc<T>\n  Vec<T>\n  bytes::bytes::Bytes\nand 3 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `parity_scale_codec::Encode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `FullEncode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `OraclePrice` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `StorageMap<_GeneratedPrefixForStorageDataFeeds<T>, ..., ..., ...>` to implement `frame_support::StorageMap<sp_core::H256, OraclePrice>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-11145608883861942922.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `OraclePrice: FullCodec` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:136:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m136\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::storage]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeEncode` is not implemented for `OraclePrice`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapperTypeEncode`:\u001b[0m\n\u001b[0m              &T\u001b[0m\n\u001b[0m              &mut T\u001b[0m\n\u001b[0m              Arc<T>\u001b[0m\n\u001b[0m              Box<T>\u001b[0m\n\u001b[0m              Cow<'_, T>\u001b[0m\n\u001b[0m              Rc<T>\u001b[0m\n\u001b[0m              Vec<T>\u001b[0m\n\u001b[0m              bytes::bytes::Bytes\u001b[0m\n\u001b[0m            and 3 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `parity_scale_codec::Encode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `FullEncode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `OraclePrice` to implement `FullCodec`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `StorageMap<_GeneratedPrefixForStorageDataFeeds<T>, ..., ..., ...>` to implement `frame_support::StorageMap<sp_core::H256, OraclePrice>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-11145608883861942922.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":5741,"byte_end":5765,"line_start":183,"line_end":183,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"        VRFRequest<T::AccountId>,","highlight_start":9,"highlight_end":33}],"label":"the trait `WrapperTypeDecode` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `WrapperTypeDecode`:\n  Arc<T>\n  Box<T>\n  Rc<T>\n  sp_core::Bytes","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `Decode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `frame_support::StorageMap::get`","code":null,"level":"note","spans":[{"file_name":"/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/storage/mod.rs","byte_start":9326,"byte_end":9329,"line_start":282,"line_end":282,"column_start":5,"column_end":8,"is_primary":false,"text":[{"text":"\tfn get<KeyArg: EncodeLike<K>>(key: KeyArg) -> Self::Query;","highlight_start":5,"highlight_end":8}],"label":"required by a bound in this associated function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/storage/mod.rs","byte_start":8933,"byte_end":8942,"line_start":271,"line_end":271,"column_start":40,"column_end":49,"is_primary":true,"text":[{"text":"pub trait StorageMap<K: FullEncode, V: FullCodec> {","highlight_start":40,"highlight_end":49}],"label":"required by this bound in `StorageMap::get`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:183:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        VRFRequest<T::AccountId>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeDecode` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapperTypeDecode`:\u001b[0m\n\u001b[0m              Arc<T>\u001b[0m\n\u001b[0m              Box<T>\u001b[0m\n\u001b[0m              Rc<T>\u001b[0m\n\u001b[0m              sp_core::Bytes\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `Decode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullCodec`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `frame_support::StorageMap::get`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/storage/mod.rs:271:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m271\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait StorageMap<K: FullEncode, V: FullCodec> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `StorageMap::get`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m282\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get<KeyArg: EncodeLike<K>>(key: KeyArg) -> Self::Query;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this associated function\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":5741,"byte_end":5765,"line_start":183,"line_end":183,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"        VRFRequest<T::AccountId>,","highlight_start":9,"highlight_end":33}],"label":"the trait `EncodeLike` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `EncodeLike<T>`:\n  `&&T` implements `EncodeLike<T>`\n  `&T` implements `EncodeLike<T>`\n  `&T` implements `EncodeLike`\n  `&[(K, V)]` implements `EncodeLike<BTreeMap<LikeK, LikeV>>`\n  `&[(T,)]` implements `EncodeLike<BTreeSet<LikeT>>`\n  `&[(T,)]` implements `EncodeLike<BinaryHeap<LikeT>>`\n  `&[(T,)]` implements `EncodeLike<LinkedList<LikeT>>`\n  `&[T]` implements `EncodeLike<Vec<U>>`\nand 374 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullEncode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `frame_support::StorageMap::get`","code":null,"level":"note","spans":[{"file_name":"/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/storage/mod.rs","byte_start":9326,"byte_end":9329,"line_start":282,"line_end":282,"column_start":5,"column_end":8,"is_primary":false,"text":[{"text":"\tfn get<KeyArg: EncodeLike<K>>(key: KeyArg) -> Self::Query;","highlight_start":5,"highlight_end":8}],"label":"required by a bound in this associated function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/storage/mod.rs","byte_start":8933,"byte_end":8942,"line_start":271,"line_end":271,"column_start":40,"column_end":49,"is_primary":true,"text":[{"text":"pub trait StorageMap<K: FullEncode, V: FullCodec> {","highlight_start":40,"highlight_end":49}],"label":"required by this bound in `StorageMap::get`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:183:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        VRFRequest<T::AccountId>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `EncodeLike` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `EncodeLike<T>`:\u001b[0m\n\u001b[0m              `&&T` implements `EncodeLike<T>`\u001b[0m\n\u001b[0m              `&T` implements `EncodeLike<T>`\u001b[0m\n\u001b[0m              `&T` implements `EncodeLike`\u001b[0m\n\u001b[0m              `&[(K, V)]` implements `EncodeLike<BTreeMap<LikeK, LikeV>>`\u001b[0m\n\u001b[0m              `&[(T,)]` implements `EncodeLike<BTreeSet<LikeT>>`\u001b[0m\n\u001b[0m              `&[(T,)]` implements `EncodeLike<BinaryHeap<LikeT>>`\u001b[0m\n\u001b[0m              `&[(T,)]` implements `EncodeLike<LinkedList<LikeT>>`\u001b[0m\n\u001b[0m              `&[T]` implements `EncodeLike<Vec<U>>`\u001b[0m\n\u001b[0m            and 374 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullEncode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullCodec`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `frame_support::StorageMap::get`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/storage/mod.rs:271:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m271\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait StorageMap<K: FullEncode, V: FullCodec> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `StorageMap::get`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m282\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get<KeyArg: EncodeLike<K>>(key: KeyArg) -> Self::Query;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this associated function\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":5741,"byte_end":5765,"line_start":183,"line_end":183,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"        VRFRequest<T::AccountId>,","highlight_start":9,"highlight_end":33}],"label":"the trait `WrapperTypeEncode` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `WrapperTypeEncode`:\n  &T\n  &mut T\n  Arc<T>\n  Box<T>\n  Cow<'_, T>\n  Rc<T>\n  Vec<T>\n  bytes::bytes::Bytes\nand 3 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `parity_scale_codec::Encode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullEncode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `frame_support::StorageMap::get`","code":null,"level":"note","spans":[{"file_name":"/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/storage/mod.rs","byte_start":9326,"byte_end":9329,"line_start":282,"line_end":282,"column_start":5,"column_end":8,"is_primary":false,"text":[{"text":"\tfn get<KeyArg: EncodeLike<K>>(key: KeyArg) -> Self::Query;","highlight_start":5,"highlight_end":8}],"label":"required by a bound in this associated function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/storage/mod.rs","byte_start":8933,"byte_end":8942,"line_start":271,"line_end":271,"column_start":40,"column_end":49,"is_primary":true,"text":[{"text":"pub trait StorageMap<K: FullEncode, V: FullCodec> {","highlight_start":40,"highlight_end":49}],"label":"required by this bound in `StorageMap::get`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:183:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m183\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        VRFRequest<T::AccountId>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeEncode` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapperTypeEncode`:\u001b[0m\n\u001b[0m              &T\u001b[0m\n\u001b[0m              &mut T\u001b[0m\n\u001b[0m              Arc<T>\u001b[0m\n\u001b[0m              Box<T>\u001b[0m\n\u001b[0m              Cow<'_, T>\u001b[0m\n\u001b[0m              Rc<T>\u001b[0m\n\u001b[0m              Vec<T>\u001b[0m\n\u001b[0m              bytes::bytes::Bytes\u001b[0m\n\u001b[0m            and 3 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `parity_scale_codec::Encode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullEncode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullCodec`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `frame_support::StorageMap::get`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/.cargo/git/checkouts/polkadot-sdk-dee0edd6eefa0594/6fd693e/substrate/frame/support/src/storage/mod.rs:271:40\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m271\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub trait StorageMap<K: FullEncode, V: FullCodec> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `StorageMap::get`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m282\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get<KeyArg: EncodeLike<K>>(key: KeyArg) -> Self::Query;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound in this associated function\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":5584,"byte_end":5591,"line_start":177,"line_end":177,"column_start":15,"column_end":22,"is_primary":true,"text":[{"text":"    #[pallet::storage]","highlight_start":15,"highlight_end":22}],"label":"the trait `WrapperTypeDecode` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `WrapperTypeDecode`:\n  Arc<T>\n  Box<T>\n  Rc<T>\n  sp_core::Bytes","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `Decode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>` to implement `frame_support::StorageMap<sp_core::H256, VRFRequest<<T as frame_system::Config>::AccountId>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-9718058397547285183.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:177:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::storage]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeDecode` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapperTypeDecode`:\u001b[0m\n\u001b[0m              Arc<T>\u001b[0m\n\u001b[0m              Box<T>\u001b[0m\n\u001b[0m              Rc<T>\u001b[0m\n\u001b[0m              sp_core::Bytes\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `Decode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullCodec`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>` to implement `frame_support::StorageMap<sp_core::H256, VRFRequest<<T as frame_system::Config>::AccountId>>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-9718058397547285183.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":5584,"byte_end":5591,"line_start":177,"line_end":177,"column_start":15,"column_end":22,"is_primary":true,"text":[{"text":"    #[pallet::storage]","highlight_start":15,"highlight_end":22}],"label":"the trait `EncodeLike` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `EncodeLike<T>`:\n  `&&T` implements `EncodeLike<T>`\n  `&T` implements `EncodeLike<T>`\n  `&T` implements `EncodeLike`\n  `&[(K, V)]` implements `EncodeLike<BTreeMap<LikeK, LikeV>>`\n  `&[(T,)]` implements `EncodeLike<BTreeSet<LikeT>>`\n  `&[(T,)]` implements `EncodeLike<BinaryHeap<LikeT>>`\n  `&[(T,)]` implements `EncodeLike<LinkedList<LikeT>>`\n  `&[T]` implements `EncodeLike<Vec<U>>`\nand 374 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullEncode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>` to implement `frame_support::StorageMap<sp_core::H256, VRFRequest<<T as frame_system::Config>::AccountId>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-9718058397547285183.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:177:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::storage]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `EncodeLike` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `EncodeLike<T>`:\u001b[0m\n\u001b[0m              `&&T` implements `EncodeLike<T>`\u001b[0m\n\u001b[0m              `&T` implements `EncodeLike<T>`\u001b[0m\n\u001b[0m              `&T` implements `EncodeLike`\u001b[0m\n\u001b[0m              `&[(K, V)]` implements `EncodeLike<BTreeMap<LikeK, LikeV>>`\u001b[0m\n\u001b[0m              `&[(T,)]` implements `EncodeLike<BTreeSet<LikeT>>`\u001b[0m\n\u001b[0m              `&[(T,)]` implements `EncodeLike<BinaryHeap<LikeT>>`\u001b[0m\n\u001b[0m              `&[(T,)]` implements `EncodeLike<LinkedList<LikeT>>`\u001b[0m\n\u001b[0m              `&[T]` implements `EncodeLike<Vec<U>>`\u001b[0m\n\u001b[0m            and 374 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullEncode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullCodec`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>` to implement `frame_support::StorageMap<sp_core::H256, VRFRequest<<T as frame_system::Config>::AccountId>>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-9718058397547285183.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs","byte_start":5584,"byte_end":5591,"line_start":177,"line_end":177,"column_start":15,"column_end":22,"is_primary":true,"text":[{"text":"    #[pallet::storage]","highlight_start":15,"highlight_end":22}],"label":"the trait `WrapperTypeEncode` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `WrapperTypeEncode`:\n  &T\n  &mut T\n  Arc<T>\n  Box<T>\n  Cow<'_, T>\n  Rc<T>\n  Vec<T>\n  bytes::bytes::Bytes\nand 3 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `parity_scale_codec::Encode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullEncode`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullCodec`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required for `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>` to implement `frame_support::StorageMap<sp_core::H256, VRFRequest<<T as frame_system::Config>::AccountId>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-9718058397547285183.txt'","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider using `--verbose` to print the full type name to the console","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `VRFRequest<<T as frame_system::Config>::AccountId>: FullCodec` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/macbook/Desktop/etrid/05-multichain/bridge-protocols/chainlink-bridge/src/lib.rs:177:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m177\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    #[pallet::storage]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `WrapperTypeEncode` is not implemented for `VRFRequest<<T as frame_system::Config>::AccountId>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `WrapperTypeEncode`:\u001b[0m\n\u001b[0m              &T\u001b[0m\n\u001b[0m              &mut T\u001b[0m\n\u001b[0m              Arc<T>\u001b[0m\n\u001b[0m              Box<T>\u001b[0m\n\u001b[0m              Cow<'_, T>\u001b[0m\n\u001b[0m              Rc<T>\u001b[0m\n\u001b[0m              Vec<T>\u001b[0m\n\u001b[0m              bytes::bytes::Bytes\u001b[0m\n\u001b[0m            and 3 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `parity_scale_codec::Encode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullEncode`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `VRFRequest<<T as frame_system::Config>::AccountId>` to implement `FullCodec`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `StorageMap<_GeneratedPrefixForStorageVRFRequests<T>, ..., ..., ...>` to implement `frame_support::StorageMap<sp_core::H256, VRFRequest<<T as frame_system::Config>::AccountId>>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the full name for the type has been written to '/Users/macbook/Desktop/etrid/05-multichain/partition-burst-chains/pbc-node/pbc-collator-nodes/link-pbc-collator/target/debug/deps/chainlink_bridge-85e7b668fc3939d2.long-type-9718058397547285183.txt'\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: consider using `--verbose` to print the full type name to the console\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 56 previous errors; 13 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 56 previous errors; 13 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0277, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0277, E0599.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}
