//! Pallet Compliance - Auto Generated by Blitzy

#![cfg_attr(not(feature = "std"), no_std)]

use frame_support::{decl_module, decl_event, decl_storage, decl_error, dispatch};
use frame_system::ensure_signed;

pub trait Config: frame_system::Config {
    type Event: From<Event<Self>> + Into<<Self as frame_system::Config>::Event>;
}

decl_storage! {
    trait Store for Module<T: Config> as ComplianceModule {
        ComplianceMode get(fn compliance_mode): bool;
    }
}

decl_event! {
    pub enum Event<T> {
        ComplianceEnabled,
    }
}

decl_module! {
    pub struct Module<T: Config> for enum Call where origin: T::Origin {
        fn deposit_event() = default;
    }
}
