# AI Devs Social Automation - Environment Configuration
#
# Copy this file to .env and fill in your credentials
# NEVER commit .env to git - it contains secrets!
#
# Usage:
#   cp .env.example .env
#   nano .env  # Edit with your credentials
#   source .env  # Load into environment

# ============================================================================
# BLOCKCHAIN CONNECTION
# ============================================================================

# FlareChain WebSocket URL
# - Local dev: ws://127.0.0.1:9944
# - Testnet: wss://testnet.etrid.network
# - Mainnet: wss://rpc.etrid.network
BLOCKCHAIN_WS_URL=ws://127.0.0.1:9944

# Blockchain network name (for logging/monitoring)
BLOCKCHAIN_NETWORK=development

# ============================================================================
# TWITTER API (Required)
# ============================================================================

# Get credentials from: https://developer.twitter.com/en/portal/dashboard
#
# Steps:
# 1. Create Twitter account @EtridAI_Devs
# 2. Apply for Developer Account
# 3. Create new app
# 4. Generate API keys and tokens
# 5. Copy here

TWITTER_API_KEY=your_api_key_here
TWITTER_API_SECRET=your_api_secret_here
TWITTER_ACCESS_TOKEN=your_access_token_here
TWITTER_ACCESS_SECRET=your_access_secret_here

# Twitter account username (without @)
TWITTER_USERNAME=EtridAI_Devs

# ============================================================================
# ANTHROPIC CLAUDE API (Required)
# ============================================================================

# Get API key from: https://console.anthropic.com/
#
# Recommended model: claude-sonnet-4-5-20250929
# Cost: ~$3 per 1M input tokens, ~$15 per 1M output tokens
# Expected usage: $50-150/month depending on posting frequency

ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Claude model to use (default: claude-sonnet-4-5-20250929)
CLAUDE_MODEL=claude-sonnet-4-5-20250929

# ============================================================================
# DISCORD (Optional - for future multi-platform)
# ============================================================================

# Discord bot token (from Discord Developer Portal)
DISCORD_BOT_TOKEN=your_discord_bot_token_here

# Discord server (guild) ID
DISCORD_GUILD_ID=your_guild_id_here

# Discord channel IDs for posting
DISCORD_CHANNEL_ANNOUNCEMENTS=your_channel_id_here
DISCORD_CHANNEL_DEVLOGS=your_channel_id_here

# ============================================================================
# TELEGRAM (Optional - for future multi-platform)
# ============================================================================

# Telegram bot token (from @BotFather)
TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here

# Telegram channel ID for posting
TELEGRAM_CHANNEL_ID=your_channel_id_here

# ============================================================================
# NOTIFICATIONS
# ============================================================================

# Slack webhook for alerts/notifications (optional)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# Email for critical alerts (optional)
ALERT_EMAIL=alerts@etrid.network

# ============================================================================
# DATABASE (Optional - for caching and analytics)
# ============================================================================

# PostgreSQL connection string (for storing post history, analytics)
DATABASE_URL=postgresql://user:password@localhost:5432/etrid_social

# Redis URL (for caching blockchain data, rate limiting)
REDIS_URL=redis://localhost:6379/0

# ============================================================================
# EXTERNAL APIS (Optional)
# ============================================================================

# CoinGecko API for exchange listings
COINGECKO_API_KEY=your_coingecko_api_key_here

# CoinMarketCap API
CMC_API_KEY=your_cmc_api_key_here

# ============================================================================
# SECURITY & MODERATION
# ============================================================================

# Moderation strictness: normal, strict, paranoid
MODERATION_STRICTNESS=normal

# Auto-approve posts above this confidence score (0-1)
AUTO_APPROVE_THRESHOLD=0.8

# Require human approval for all posts (true/false)
REQUIRE_HUMAN_APPROVAL=false

# ============================================================================
# RATE LIMITING
# ============================================================================

# Max posts per day (safety limit)
MAX_POSTS_PER_DAY=50

# Min seconds between posts
MIN_POST_INTERVAL=300

# Max auto-responses per hour
MAX_RESPONSES_PER_HOUR=20

# ============================================================================
# DEVELOPMENT & TESTING
# ============================================================================

# Environment: development, staging, production
ENVIRONMENT=development

# Dry run mode - don't actually post, just log what would be posted
DRY_RUN=false

# Use mock blockchain data (for testing without node)
USE_MOCK_DATA=false

# Debug mode - verbose logging
DEBUG=true

# Test mode - post to test account instead of production
TEST_MODE=false
TEST_TWITTER_USERNAME=EtridAI_Test

# ============================================================================
# LOGGING
# ============================================================================

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Log file path
LOG_FILE=./logs/social_automation.log

# Log to console (true/false)
LOG_TO_CONSOLE=true

# ============================================================================
# GLOBAL MEMORY & DID
# ============================================================================

# Path to GLOBAL_MEMORY.md (for logging AI Dev activities)
GLOBAL_MEMORY_PATH=../memory/GLOBAL_MEMORY.md

# Path to AI Dev DID documents directory
DID_DOCUMENTS_PATH=../dids/

# ============================================================================
# MONITORING & ANALYTICS
# ============================================================================

# Prometheus metrics port (for monitoring)
METRICS_PORT=9090

# Grafana dashboard URL
GRAFANA_URL=http://localhost:3000

# Enable analytics collection
ENABLE_ANALYTICS=true

# ============================================================================
# COST MANAGEMENT
# ============================================================================

# Max daily spend on Claude API (USD)
MAX_DAILY_CLAUDE_SPEND=10.00

# Alert when daily spend exceeds this threshold
SPEND_ALERT_THRESHOLD=5.00

# ============================================================================
# BACKUP & RECOVERY
# ============================================================================

# Backup post history to S3/storage (true/false)
ENABLE_BACKUPS=false

# S3 bucket for backups
S3_BACKUP_BUCKET=etrid-social-backups

# AWS credentials (if using S3)
AWS_ACCESS_KEY_ID=your_aws_access_key_here
AWS_SECRET_ACCESS_KEY=your_aws_secret_key_here
AWS_REGION=us-east-1

# ============================================================================
# ADVANCED FEATURES
# ============================================================================

# Enable experimental features (true/false)
ENABLE_EXPERIMENTAL=false

# Enable image generation (future feature)
ENABLE_IMAGES=false

# Enable video posts (future feature)
ENABLE_VIDEOS=false

# Enable polls (future feature)
ENABLE_POLLS=false

# ============================================================================
# NOTES
# ============================================================================
#
# Required for basic operation:
# - BLOCKCHAIN_WS_URL
# - TWITTER_API_KEY, TWITTER_API_SECRET, TWITTER_ACCESS_TOKEN, TWITTER_ACCESS_SECRET
# - ANTHROPIC_API_KEY
#
# Optional but recommended:
# - SLACK_WEBHOOK_URL (for alerts)
# - DATABASE_URL (for analytics)
# - REDIS_URL (for caching)
#
# Development setup:
# - Use DRY_RUN=true to test without posting
# - Use USE_MOCK_DATA=true to test without blockchain node
# - Use DEBUG=true for verbose logging
#
# Production checklist:
# - Set ENVIRONMENT=production
# - Set DRY_RUN=false
# - Set REQUIRE_HUMAN_APPROVAL=false (after testing)
# - Set up SLACK_WEBHOOK_URL for alerts
# - Enable DATABASE_URL for analytics
# - Set MAX_POSTS_PER_DAY to reasonable limit
# - Monitor costs with MAX_DAILY_CLAUDE_SPEND
#
