# ═══════════════════════════════════════════════════════════════
# Ëtrid AI Devs - Environment Configuration
# ═══════════════════════════════════════════════════════════════
# Copy this file to .env and fill in your values
# Never commit .env to git!

# ─────────────────────────────────────────────────────────────
# LLM Backend Selection
# ─────────────────────────────────────────────────────────────
# Options: claude | gpt | local
LLM_BACKEND=claude

# ─────────────────────────────────────────────────────────────
# Claude (Anthropic) API
# ─────────────────────────────────────────────────────────────
# Get your key at: https://console.anthropic.com/
ANTHROPIC_API_KEY=sk-ant-api03-your-key-here

# ─────────────────────────────────────────────────────────────
# OpenAI API
# ─────────────────────────────────────────────────────────────
# Get your key at: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your-key-here

# ─────────────────────────────────────────────────────────────
# Notion Integration (Optional)
# ─────────────────────────────────────────────────────────────
# Get integration at: https://www.notion.so/my-integrations
NOTION_API_KEY=secret_your-notion-key-here
NOTION_DATABASE_ID=your-database-id-here

# ─────────────────────────────────────────────────────────────
# Discord Webhooks (Optional)
# ─────────────────────────────────────────────────────────────
# Create webhook in Discord server settings
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/your-webhook-url

# ─────────────────────────────────────────────────────────────
# GitHub Integration (Optional)
# ─────────────────────────────────────────────────────────────
# Generate token at: https://github.com/settings/tokens
# Needs: repo, workflow permissions
GITHUB_TOKEN=ghp_your-github-token-here

# ─────────────────────────────────────────────────────────────
# PagerDuty Alerts (Optional)
# ─────────────────────────────────────────────────────────────
PAGERDUTY_API_KEY=your-pagerduty-key
PAGERDUTY_SERVICE_ID=your-service-id

# ─────────────────────────────────────────────────────────────
# Email Notifications (Optional)
# ─────────────────────────────────────────────────────────────
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-specific-password

# ─────────────────────────────────────────────────────────────
# Telegram Bot (BSC MasterChef Monitoring)
# ─────────────────────────────────────────────────────────────
# Create bot with @BotFather on Telegram
TELEGRAM_BOT_TOKEN=123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11
# Get your ID from @userinfobot (comma-separated for multiple admins)
TELEGRAM_ADMIN_IDS=123456789,987654321
# Default network for bot commands (mainnet or testnet)
DEFAULT_NETWORK=mainnet

# Alert thresholds for Telegram notifications
LOW_BALANCE_THRESHOLD=1000000
CRITICAL_BALANCE_THRESHOLD=500000
TVL_DROP_THRESHOLD=10
APR_DROP_THRESHOLD=20
ALERT_CHECK_INTERVAL=300000

# ─────────────────────────────────────────────────────────────
# BSC (Binance Smart Chain) Configuration
# ─────────────────────────────────────────────────────────────
# Deployer wallet (DO NOT use for mainnet - generate with npm run generate-wallet)
DEPLOYER_PRIVATE_KEY=0x0000000000000000000000000000000000000000000000000000000000000000

# ÉTR Token Addresses (filled in after deployment)
ETR_TOKEN_ADDRESS_MAINNET=0x0000000000000000000000000000000000000000
ETR_TOKEN_ADDRESS_TESTNET=0x0000000000000000000000000000000000000000

# MasterChef Addresses (filled in after deployment)
MASTERCHEF_ADDRESS_MAINNET=0x0000000000000000000000000000000000000000
MASTERCHEF_ADDRESS_TESTNET=0x0000000000000000000000000000000000000000

# RPC URLs (optional - defaults to public endpoints)
BSC_MAINNET_RPC=https://bsc-dataseed1.binance.org
BSC_TESTNET_RPC=https://data-seed-prebsc-1-s1.binance.org:8545

# BscScan API key (for contract verification)
BSCSCAN_API_KEY=your-bscscan-api-key

# ─────────────────────────────────────────────────────────────
# Monitoring & Dashboards
# ─────────────────────────────────────────────────────────────
GRAFANA_ADMIN_PASSWORD=change_me_to_secure_password

# ─────────────────────────────────────────────────────────────
# Logging
# ─────────────────────────────────────────────────────────────
# Options: DEBUG | INFO | WARN | ERROR
LOG_LEVEL=INFO

# ─────────────────────────────────────────────────────────────
# Advanced Configuration (Usually don't need to change)
# ─────────────────────────────────────────────────────────────

# Blockchain endpoints (defaults work with Docker Compose)
# ETRID_WS_ENDPOINT=ws://etrid-node:9944
# ETRID_RPC_ENDPOINT=http://etrid-node:9933

# Vector DB endpoint
# VECTORDB_ENDPOINT=http://vectordb:6333

# Ollama endpoint (for local LLM)
# OLLAMA_ENDPOINT=http://ollama:11434
