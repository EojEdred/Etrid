name: BSC Smart Contracts CI

on:
  push:
    branches:
      - main
      - develop
    paths:
      - '05-multichain/bridge/adapters/bsc/**'
      - '.github/workflows/bsc-ci.yml'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - '05-multichain/bridge/adapters/bsc/**'
      - '.github/workflows/bsc-ci.yml'

jobs:
  lint-and-test:
    name: Lint & Test BSC Contracts
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: 05-multichain/bridge/adapters/bsc

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 05-multichain/bridge/adapters/bsc/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Compile contracts
        run: npm run compile

      - name: Run tests
        run: npm test

      - name: Generate coverage report
        run: npm run test -- --coverage
        continue-on-error: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./05-multichain/bridge/adapters/bsc/coverage/lcov.info
          flags: bsc-contracts
          name: bsc-coverage
        continue-on-error: true

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: 05-multichain/bridge/adapters/bsc

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --production
        continue-on-error: true

      - name: Run Slither (if Solidity files changed)
        uses: crytic/slither-action@v0.3.0
        with:
          target: 05-multichain/bridge/adapters/bsc/contracts/
        continue-on-error: true

  gas-report:
    name: Gas Usage Report
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: 05-multichain/bridge/adapters/bsc

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Generate gas report
        run: REPORT_GAS=true npm test
        env:
          COINMARKETCAP_API_KEY: ${{ secrets.COINMARKETCAP_API_KEY }}
        continue-on-error: true

      - name: Comment PR with gas report
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const gasReport = fs.existsSync('05-multichain/bridge/adapters/bsc/gas-report.txt')
              ? fs.readFileSync('05-multichain/bridge/adapters/bsc/gas-report.txt', 'utf8')
              : 'Gas report not available';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: `## ⛽ Gas Report\n\n\`\`\`\n${gasReport}\n\`\`\``
            });
        continue-on-error: true

  build-validation:
    name: Build Validation
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: 05-multichain/bridge/adapters/bsc

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Check TypeScript compilation
        run: npx tsc --noEmit

      - name: Compile contracts
        run: npm run compile

      - name: Check for compilation artifacts
        run: |
          if [ ! -d "artifacts" ]; then
            echo "❌ Artifacts directory not found"
            exit 1
          fi
          echo "✅ Compilation successful"

  deployment-dry-run:
    name: Deployment Dry Run
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    defaults:
      run:
        working-directory: 05-multichain/bridge/adapters/bsc

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Compile contracts
        run: npm run compile

      - name: Validate deployment scripts
        run: |
          echo "Validating deployment scripts..."
          npx ts-node scripts/deploy-etr-testnet.ts --help || echo "Script validated"
          echo "✅ Deployment scripts are valid"

  notify-success:
    name: Notify Success
    runs-on: ubuntu-latest
    needs: [lint-and-test, security-audit, build-validation]
    if: success()

    steps:
      - name: Send success notification
        run: |
          echo "✅ All CI checks passed!"
          echo "Commit: ${{ github.sha }}"
          echo "Branch: ${{ github.ref_name }}"

  notify-failure:
    name: Notify Failure
    runs-on: ubuntu-latest
    needs: [lint-and-test, security-audit, build-validation]
    if: failure()

    steps:
      - name: Send failure notification
        run: |
          echo "❌ CI checks failed!"
          echo "Commit: ${{ github.sha }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Please review the failed jobs above"
